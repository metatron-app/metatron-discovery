id,categoryCode,commonCode,categoryCommonCodeNm,commonCodeNm,commonValue,commonCodeSNO,commonUseFl,version,description,syntax,param,example,descriptionEn,paramEn,exampleEn
4,PAGE-CALCULATION,ETC,ETC FIELD,ETC FUNCTION,SIZE,1,Y,0,"collection의 크기를 반환합니다.","SIZE(collection)","collection: 대상이 되는 array 입니다.","SIZE(ARRAY('1', '2', '3', '4')) = <span class=\"ddp-txt-sub-det\">4</span>","Returns the size of the collection.","Collection: This is the array to be targeted.","SIZE(ARRAY('1', '2', '3', '4')) = <span class=\"ddp-txt-sub-det\">4</span>"
5,PAGE-CALCULATION,TYPE_CONVERT,TYPE_CONVERT FIELD,TYPE_CONVERT FUNCTION,ARRAY,1,Y,0,"주어진 값들을 array(collection)의 형태로 반환합니다.","ARRAY(value1, value2,...)","value1: value1,value2,... 대상이 되는 값들입니다.","ARRAY('1', '2', '3', '4') = <span class=\"ddp-txt-sub-det\">[ 1.0, 2.0, 3.0, 4.0 ]</span>","Returns the given values in the form of array(collection).","value1: value1,value2,... These are the values","ARRAY('1', '2', '3', '4') = <span class=\"ddp-txt-sub-det\">[ 1.0, 2.0, 3.0, 4.0 ]</span>"
6,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LIKE,1,Y,0,"search_text으로 match를 확인하여 boolean 으로 반환합니다.","LIKE(text , search_text)","text: 대상이 되는 텍스트 문자열입니다.#search_text: 찾고자하는 문자열입니다.","LIKE('Funiture' , 'F%') = <span class=\"ddp-txt-sub-det\">True</span>#LIKE('Technology' , '%gy') = <span class=\"ddp-txt-sub-det\">True</span>#LIKE('Technology' , '%nol%') = <span class=\"ddp-txt-sub-det\">True</span>","Check the match with search_text and return it to Boolean .","text: The text string to which it is targeted.#search_text: The string you want to find.","LIKE('Funiture' , 'F%') = <span class=\"ddp-txt-sub-det\">True</span>#LIKE('Technology' , '%gy') = <span class=\"ddp-txt-sub-det\">True</span>#LIKE('Technology' , '%nol%') = <span class=\"ddp-txt-sub-det\">True</span>"
7,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,REGEX,1,Y,0,"regex_text으로 match를 확인하여 matching된 문자열을 반환한다. 그룹화한 경우 index를 통해 원하는 위치의 문자열을 반환할 수 있다.","REGEX(text , regex_text)#REGEX(text , regex_text, index)","text: 대상이 되는 텍스트 문자열입니다.#regex_text: 찾고자하는 정규 표현식 문자열입니다.#index: regex_text를 통해 그룹화한 경우 반환할 그룹위치입니다. 0이면 전체를 반환합니다.","REGEX('Funiture' , 'F.*') = <span class=\"ddp-txt-sub-det\">'Funiture'</span>#REGEX('Funiture' , 'tu.*') = <span class=\"ddp-txt-sub-det\">'ture'</span>#REGEX('Technology' , 'F.*') = <span class=\"ddp-txt-sub-det\">'null'</span>#REGEX('ABC3000EFG' , '(.*?)(\\\d+)(.*)', 3) = <span class=\"ddp-txt-sub-det\">'EFG'</span>","Check match with regex_text to return the matching string. If grouped, index allows you to return a string at the desired location.","text: The text string to which it is targeted.#regex_text: The regular expression string you want to find.#index: The group location to return if grouped through regex_text. If 0 then returns the whole.","REGEX('Funiture' , 'F.*') = <span class=\"ddp-txt-sub-det\">'Funiture'</span>#REGEX('Funiture' , 'tu.*') = <span class=\"ddp-txt-sub-det\">'ture'</span>#REGEX('Technology' , 'F.*') = <span class=\"ddp-txt-sub-det\">'null'</span>#REGEX('ABC3000EFG' , '(.*?)(\\\d+)(.*)', 3) = <span class=\"ddp-txt-sub-det\">'EFG'</span>"
11,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ABS,1,Y,0,"기호가 없는 수의 절대 값을 반환합니다.","ABS(number)","number: 절대 값을 구하려는 실수입니다.","ABS(-10) = <span class=\"ddp-txt-sub-det\">10</span>#ABS(10) = <span class=\"ddp-txt-sub-det\">10</span>","Returns the absolute value of a number without a symbol.","number: The mistake of trying to get an absolute value.","ABS(-10) = <span class=\"ddp-txt-sub-det\">10</span>#ABS(10) = <span class=\"ddp-txt-sub-det\">10</span>"
12,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ACOS,1,Y,0,"아크코사인 값을 구합니다.","ACOS(number)","number: 구하려는 각도의 코사인 값으로 -1에서 1 사이 값이어야 합니다.","ACOS(-1) = <span class=\"ddp-txt-sub-det\">3.141592653589793</span>","Obtain the arccosine value.","number: The cosine value for the angle you want to obtain must be between -1 and 1.","ACOS(-1) = <span class=\"ddp-txt-sub-det\">3.141592653589793</span>"
13,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ASIN,1,Y,0,"아크사인 값을 구합니다.","ASIN(number)","number: 구하려는 각도의 사인 값으로 -1에서 1 사이 값이어야 합니다.","ASIN(-1) = <span class=\"ddp-txt-sub-det\">-1.5707963267948966</span>","Obtain an arcsine value.","number: The sine value of the angle you want to obtain must be between -1 and 1.","ASIN(-1) = <span class=\"ddp-txt-sub-det\">-1.5707963267948966</span>"
14,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ATAN,1,Y,0,"아크탄젠트 값을 구합니다.","ATAN(number)","number: 구하려는 각도의 탄젠트 값입니다.","ATAN(-1) = <span class=\"ddp-txt-sub-det\">-0.7853981633974483</span>","Obtain the value of the arctangent value.","number: the tangent value of the angle you want to obtain.","ATAN(-1) = <span class=\"ddp-txt-sub-det\">-0.7853981633974483</span>"
15,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,CBRT,1,Y,0,"밑수를 세제곱한 결과를 구합니다.","CBRT(number)","number: 밑수입니다.","CBRT(5) = <span class=\"ddp-txt-sub-det\">1.709975946676697</span>","Obtain the result of cubeing the base.","Number: Base.","CBRT(5) = <span class=\"ddp-txt-sub-det\">1.709975946676697</span>"
16,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,CEIL,1,Y,0,"1의 배수가 되도록 절대 값을 올림합니다.","CEIL(number)","number: 올림하려는 수입니다.","CEIL(1.234) = <span class=\"ddp-txt-sub-det\">2</span>#CEIL(123.4) = <span class=\"ddp-txt-sub-det\">124</span>#CEIL(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#CEIL(-1.234) = <span class=\"ddp-txt-sub-det\">-1</span>","Raise the absolute value so that it is multiples of 1.","number: The number to be rounded up.","CEIL(1.234) = <span class=\"ddp-txt-sub-det\">2</span>#CEIL(123.4) = <span class=\"ddp-txt-sub-det\">124</span>#CEIL(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#CEIL(-1.234) = <span class=\"ddp-txt-sub-det\">-1</span>"
17,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,COS,1,Y,0,"각도의 코사인 값을 반환합니다.","COS(number)","number: 코사인 값을 구하려는 라디안의 각도입니다.","COS(45) = <span class=\"ddp-txt-sub-det\">0.5253219888177297</span>#COS(10) = <span class=\"ddp-txt-sub-det\">-0.8390715290764524</span>#COS(-45) = <span class=\"ddp-txt-sub-det\">0.5253219888177297</span>#COS(90) = <span class=\"ddp-txt-sub-det\">-0.4480736161291702</span>","Returns the cosine value of the angle.","number: The angle in radians where you want to obtain the cosine value.","COS(45) = <span class=\"ddp-txt-sub-det\">0.5253219888177297</span>#COS(10) = <span class=\"ddp-txt-sub-det\">-0.8390715290764524</span>#COS(-45) = <span class=\"ddp-txt-sub-det\">0.5253219888177297</span>#COS(90) = <span class=\"ddp-txt-sub-det\">-0.4480736161291702</span>"
18,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,COSH,1,Y,0,"하이퍼볼릭 코사인 값을 반환합니다.","COSH(number)","number: 임의의 실수를 나타냅니다.","COSH(4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#COSH(1) = <span class=\"ddp-txt-sub-det\">1.543080634815244</span>#COSH(-4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#COSH(9) = <span class=\"ddp-txt-sub-det\">4051.5420254925943</span>","Returns the value of the hypervolatile cosine.","number: Indicates any error.","COSH(4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#COSH(1) = <span class=\"ddp-txt-sub-det\">1.543080634815244</span>#COSH(-4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#COSH(9) = <span class=\"ddp-txt-sub-det\">4051.5420254925943</span>"
19,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,EXP,1,Y,0,"number를 지수로 한 e의 누승을 계산합니다.","EXP(number)","number: 밑 e에 적용할 지수입니다. 상수 e는 자연 로그값의 밑인 2.71828182845904와 같습니다.","EXP(4) = <span class=\"ddp-txt-sub-det\">54.598150033144236</span>#EXP(1) = <span class=\"ddp-txt-sub-det\">2.718281828459045</span>#EXP(-4) = <span class=\"ddp-txt-sub-det\">0.01831563888873418</span>#EXP(9) = <span class=\"ddp-txt-sub-det\">8103.083927575384</span>","Calculates a leak in e with the number of index.","number: The index to be applied to the e below. The constant e is equal to 2.71828182845904 below the natural logarithmic value.","EXP(4) = <span class=\"ddp-txt-sub-det\">54.598150033144236</span>#EXP(1) = <span class=\"ddp-txt-sub-det\">2.718281828459045</span>#EXP(-4) = <span class=\"ddp-txt-sub-det\">0.01831563888873418</span>#EXP(9) = <span class=\"ddp-txt-sub-det\">8103.083927575384</span>"
20,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,EXPM1,1,Y,0,"number를 지수로 한 e의 누승에서 1을 뺀 값을 반환합니다.","EXPM1(number)","number: 밑 e에 적용할 지수입니다. 상수 e는 자연 로그값의 밑인 2.71828182845904와 같습니다.","EXP(4) = <span class=\"ddp-txt-sub-det\">53.598150033144236</span>#EXP(1) = <span class=\"ddp-txt-sub-det\">1.718281828459045</span>#EXP(-4) = <span class=\"ddp-txt-sub-det\">-0.9816843611112658</span>#EXP(9) = <span class=\"ddp-txt-sub-det\">8102.083927575384</span>","Returns the value of an e with a number minus 1 minus 1","number: The index to be applied to the e below. The constant e is equal to 2.71828182845904 below the natural logarithmic value.","EXP(4) = <span class=\"ddp-txt-sub-det\">53.598150033144236</span>#EXP(1) = <span class=\"ddp-txt-sub-det\">1.718281828459045</span>#EXP(-4) = <span class=\"ddp-txt-sub-det\">-0.9816843611112658</span>#EXP(9) = <span class=\"ddp-txt-sub-det\">8102.083927575384</span>"
21,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,FLOOR,1,Y,0,"1의 배수가 되도록 절대 값을 내림합니다.","FLOOR(number)","number: 내림하려는 수입니다.","FLOOR(1.234) = <span class=\"ddp-txt-sub-det\">1</span>#FLOOR(123.4) = <span class=\"ddp-txt-sub-det\">123</span>#FLOOR(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#FLOOR(-1.234) = <span class=\"ddp-txt-sub-det\">-2</span>","Decrease the absolute value so that it is multiples of 1.","number: The number to be lowered.","FLOOR(1.234) = <span class=\"ddp-txt-sub-det\">1</span>#FLOOR(123.4) = <span class=\"ddp-txt-sub-det\">123</span>#FLOOR(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#FLOOR(-1.234) = <span class=\"ddp-txt-sub-det\">-2</span>"
22,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,GETEXPONENT,1,Y,0,"부동 소수점의 표현으로 사용되는 불편 지수를 반환합니다.","GETEXPONENT(number)","number: 지수를 가져올 대상 실수입니다.","GETEXPONENT(8) = <span class=\"ddp-txt-sub-det\">3</span>#GETEXPONENT(5.36870912E8) = <span class=\"ddp-txt-sub-det\">29</span>#GETEXPONENT(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#GETEXPONENT(-9) = <span class=\"ddp-txt-sub-det\">3</span>","Returns an unbiased index used as an expression of floating point","number: The destination error to import the index.","GETEXPONENT(8) = <span class=\"ddp-txt-sub-det\">3</span>#GETEXPONENT(5.36870912E8) = <span class=\"ddp-txt-sub-det\">29</span>#GETEXPONENT(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#GETEXPONENT(-9) = <span class=\"ddp-txt-sub-det\">3</span>"
23,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,LOG,1,Y,0,"밑이 e인 로그값을 구합니다.","LOG(number)","number: 로그값을 구하려는 양의 실수입니다.","LOG(2.71828182846) = <span class=\"ddp-txt-sub-det\">1.0000000000003513</span>#LOG(10) = <span class=\"ddp-txt-sub-det\">2.302585092994046</span>#LOG(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#LOG(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>","Obtain a log value with the base e.","number: The amount of mistake you want to obtain the log value.","LOG(2.71828182846) = <span class=\"ddp-txt-sub-det\">1.0000000000003513</span>#LOG(10) = <span class=\"ddp-txt-sub-det\">2.302585092994046</span>#LOG(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#LOG(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>"
24,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,LOG10,1,Y,0,"밑이 10인 로그값을 구합니다.","LOG10(number)","number: 밑이 10인 로그값을 구하려는 양의 실수입니다.","LOG10(2.71828182846) = <span class=\"ddp-txt-sub-det\">0.43429448190340436</span>#LOG10(10) = <span class=\"ddp-txt-sub-det\">1</span>#LOG10(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#LOG10(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>","Obtain a log value of 10 below.","number: A positive error to obtain a log value of 10 below.","LOG10(2.71828182846) = <span class=\"ddp-txt-sub-det\">0.43429448190340436</span>#LOG10(10) = <span class=\"ddp-txt-sub-det\">1</span>#LOG10(1.00) = <span class=\"ddp-txt-sub-det\">0</span>#LOG10(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>"
25,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,LOG1P,1,Y,0,"number에 1을 더한 로그값을 구합니다.","LOG1P(number)","number: 로그값을 구하려는 양의 실수입니다.","LOG1P(1.71828182846) = <span class=\"ddp-txt-sub-det\">1.0000000000003513</span>#LOG1P(10) = <span class=\"ddp-txt-sub-det\">2.3978952727983707</span>#LOG1P(1.00) = <span class=\"ddp-txt-sub-det\">0.6931471805599453</span>#LOG1P(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>","Obtain a log value that adds 1 to the number.","number: The amount of mistake you want to obtain the log value.","LOG1P(1.71828182846) = <span class=\"ddp-txt-sub-det\">1.0000000000003513</span>#LOG1P(10) = <span class=\"ddp-txt-sub-det\">2.3978952727983707</span>#LOG1P(1.00) = <span class=\"ddp-txt-sub-det\">0.6931471805599453</span>#LOG1P(-9) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>"
26,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,NEXTUP,1,Y,0,"주어진 값 보다 큰 다음 부동 소수점 값을 반환합니다.","NEXTUP(number)","number: 임의의 실수를 나타냅니다.","NEXTUP(1.71828182846) = <span class=\"ddp-txt-sub-det\">1.7182818284600003</span>NEXTUP(10) = <span class=\"ddp-txt-sub-det\">10.000000000000002</span>#NEXTUP(1.00) = <span class=\"ddp-txt-sub-det\">1.0000000000000002</span>#NEXTUP(-9) = <span class=\"ddp-txt-sub-det\">-8.999999999999998</span>","Returns the next floating point value that is greater than the given value.","number: Indicates any error.","NEXTUP(1.71828182846) = <span class=\"ddp-txt-sub-det\">1.7182818284600003</span>NEXTUP(10) = <span class=\"ddp-txt-sub-det\">10.000000000000002</span>#NEXTUP(1.00) = <span class=\"ddp-txt-sub-det\">1.0000000000000002</span>#NEXTUP(-9) = <span class=\"ddp-txt-sub-det\">-8.999999999999998</span>"
27,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,RINT,1,Y,0,"인수와 가장 가까운 정수를 반환합니다.","RINT(number)","number: 임의의 실수를 나타냅니다.","RINT(123.45) = <span class=\"ddp-txt-sub-det\">123</span>#RINT(123.5) = <span class=\"ddp-txt-sub-det\">124</span>#RINT(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#RINT(-123.45) = <span class=\"ddp-txt-sub-det\">-123</span>","Returns the integer closest to the argument.","number: Indicates any error.","RINT(123.45) = <span class=\"ddp-txt-sub-det\">123</span>#RINT(123.5) = <span class=\"ddp-txt-sub-det\">124</span>#RINT(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#RINT(-123.45) = <span class=\"ddp-txt-sub-det\">-123</span>"
28,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ROUND,1,Y,0,"인수를 반올림하여 반환합니다.","ROUND(number)","number: 반올림하려는 수입니다.","ROUND(123.45) = <span class=\"ddp-txt-sub-det\">123</span>ROUND(123.5) = <span class=\"ddp-txt-sub-det\">124</span>#ROUND(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(-123.45) = <span class=\"ddp-txt-sub-det\">-123</span>","Returns the argument by rounding","number: The number to round.","ROUND(123.45) = <span class=\"ddp-txt-sub-det\">123</span>ROUND(123.5) = <span class=\"ddp-txt-sub-det\">124</span>#ROUND(1.00) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(-123.45) = <span class=\"ddp-txt-sub-det\">-123</span>"
29,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,SIGNUM,1,Y,0,"인수의 부호 요소를 반환합니다.","SIGNUM(number)","number: 부호를 구할 실수입니다.","ROUND(123.45) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(1) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(0) = <span class=\"ddp-txt-sub-det\">0</span>#ROUND(-123.45) = <span class=\"ddp-txt-sub-det\">-1</span>","Returns the sign element of the argument.","number: Mistake to get the code.","ROUND(123.45) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(1) = <span class=\"ddp-txt-sub-det\">1</span>#ROUND(0) = <span class=\"ddp-txt-sub-det\">0</span>#ROUND(-123.45) = <span class=\"ddp-txt-sub-det\">-1</span>"
30,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,SIN,1,Y,0,"각도의 사인 값을 반환합니다.","SIN(number)","number: 사인 값을 구하려는 라디안의 각도입니다. 각도 * PI()/180 = 라디안입니다.","SIN(45) = <span class=\"ddp-txt-sub-det\">0.8509035245341184</span>#SIN(10) = <span class=\"ddp-txt-sub-det\">-0.5440211108893698</span>#SIN(-45) = <span class=\"ddp-txt-sub-det\">-0.8509035245341184</span>#SIN(90) = <span class=\"ddp-txt-sub-det\">0.8939966636005579</span>","Returns the sine value of the angle.","number: The angle in the radians where you want to obtain the sine value. Angle * PI()/180 = radians.","SIN(45) = <span class=\"ddp-txt-sub-det\">0.8509035245341184</span>#SIN(10) = <span class=\"ddp-txt-sub-det\">-0.5440211108893698</span>#SIN(-45) = <span class=\"ddp-txt-sub-det\">-0.8509035245341184</span>#SIN(90) = <span class=\"ddp-txt-sub-det\">0.8939966636005579</span>"
31,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,SINH,1,Y,0,"하이퍼볼릭 사인 값을 반환합니다.","SINH(number)","number: 임의의 실수를 나타냅니다.","SINH(4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#SINH(1) = <span class=\"ddp-txt-sub-det\">1.1752011936438014</span>#SINH(-4) = <span class=\"ddp-txt-sub-det\">-27.28991719712775</span>#SINH(9) = <span class=\"ddp-txt-sub-det\">4051.54190208279</span>","Returns the value of a hypervolatile sine.","number: Indicates any error.","SINH(4) = <span class=\"ddp-txt-sub-det\">27.308232836016487</span>#SINH(1) = <span class=\"ddp-txt-sub-det\">1.1752011936438014</span>#SINH(-4) = <span class=\"ddp-txt-sub-det\">-27.28991719712775</span>#SINH(9) = <span class=\"ddp-txt-sub-det\">4051.54190208279</span>"
32,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,SQRT,1,Y,0,"수의 제곱근을 반환합니다.","SQRT(number)","number: 제곱근을 반환하려는 수를 나타냅니다.","SQRT(4) = <span class=\"ddp-txt-sub-det\">2.0</span>#SQRT(1.234) = <span class=\"ddp-txt-sub-det\">1.1108555261599053</span>#SQRT(-4) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>#SQRT(9) = <span class=\"ddp-txt-sub-det\">3.0</span>","Returns the square root of the number.","number: Indicates the number of times you want to return the square root.","SQRT(4) = <span class=\"ddp-txt-sub-det\">2.0</span>#SQRT(1.234) = <span class=\"ddp-txt-sub-det\">1.1108555261599053</span>#SQRT(-4) = <span class=\"ddp-txt-sub-det\">\"NaN\"</span>#SQRT(9) = <span class=\"ddp-txt-sub-det\">3.0</span>"
33,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,TAN,1,Y,0,"각도의 탄젠트 값을 반환합니다.","TAN(number)","number: 탄젠트 값을 구할 라디안의 각도입니다. 각도 * PI()/180 = 라디안입니다.","TAN(45) = <span class=\"ddp-txt-sub-det\">1.6197751905438615</span>#TAN(10) = <span class=\"ddp-txt-sub-det\">0.6483608274590866</span>#TAN(-45) = <span class=\"ddp-txt-sub-det\">-1.6197751905438615</span>#TAN(90) = <span class=\"ddp-txt-sub-det\">-1.995200412208242</span>","Returns the tangent value of the angle.","number: The angle in radians where the tangent value will be obtained. Angle * PI()/180 = radians.","TAN(45) = <span class=\"ddp-txt-sub-det\">1.6197751905438615</span>#TAN(10) = <span class=\"ddp-txt-sub-det\">0.6483608274590866</span>#TAN(-45) = <span class=\"ddp-txt-sub-det\">-1.6197751905438615</span>#TAN(90) = <span class=\"ddp-txt-sub-det\">-1.995200412208242</span>"
34,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,TANH,1,Y,0,"하이퍼볼릭 탄젠트 값을 반환합니다.","TANH(number)","number: 임의의 실수를 나타냅니다.","TANH(4) = <span class=\"ddp-txt-sub-det\">0.999329299739067</span>#TANH(1) = <span class=\"ddp-txt-sub-det\">0.7615941559557649</span>#TANH(-4) = <span class=\"ddp-txt-sub-det\">-0.999329299739067</span>#TANH(9) = <span class=\"ddp-txt-sub-det\">0.999999969540041</span>","Returns the value of the hypervolatile tangent.","number: Indicates any error.","TANH(4) = <span class=\"ddp-txt-sub-det\">0.999329299739067</span>#TANH(1) = <span class=\"ddp-txt-sub-det\">0.7615941559557649</span>#TANH(-4) = <span class=\"ddp-txt-sub-det\">-0.999329299739067</span>#TANH(9) = <span class=\"ddp-txt-sub-det\">0.999999969540041</span>"
35,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,TODEGREES,1,Y,0,"라디안 형태의 각도를 도 단위로 바꿉니다.","DEGREES(angle)","angle: 변환하려는 라디안 형태의 각도입니다.","TODEGREES(TORADIANS(45)) = <span class=\"ddp-txt-sub-det\">45</span>#TODEGREES(TORADIANS(1)) = <span class=\"ddp-txt-sub-det\">1</span>#TODEGREES(TORADIANS(-45)) = <span class=\"ddp-txt-sub-det\">-45</span>#TODEGREES(TORADIANS(90)) = <span class=\"ddp-txt-sub-det\">90</span>","Change the radians-type angle in degrees.","angle: the angle of the radian form you want to convert.","TODEGREES(TORADIANS(45)) = <span class=\"ddp-txt-sub-det\">45</span>#TODEGREES(TORADIANS(1)) = <span class=\"ddp-txt-sub-det\">1</span>#TODEGREES(TORADIANS(-45)) = <span class=\"ddp-txt-sub-det\">-45</span>#TODEGREES(TORADIANS(90)) = <span class=\"ddp-txt-sub-det\">90</span>"
36,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,TORADIANS,1,Y,0,"도 단위로 표시된 각도를 라디안으로 변환합니다.","RADIANS(angle)","angle: 라디안으로 변환할 각도입니다.","TORADIANS(45) = <span class=\"ddp-txt-sub-det\">0.7853981633974483</span>#TORADIANS(1) = <span class=\"ddp-txt-sub-det\">0.017453292519943295</span>#TORADIANS(-45) = <span class=\"ddp-txt-sub-det\">-0.7853981633974483</span>#TORADIANS(90) = <span class=\"ddp-txt-sub-det\">1.5707963267948966</span>","Converts the angle displayed in degrees into radians.","angle: the angle to be converted into radians.","TORADIANS(45) = <span class=\"ddp-txt-sub-det\">0.7853981633974483</span>#TORADIANS(1) = <span class=\"ddp-txt-sub-det\">0.017453292519943295</span>#TORADIANS(-45) = <span class=\"ddp-txt-sub-det\">-0.7853981633974483</span>#TORADIANS(90) = <span class=\"ddp-txt-sub-det\">1.5707963267948966</span>"
37,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ULP,1,Y,0,"인수의 ulp의 사이즈를 돌려줍니다. 부동 소수점 값의 ULP이 부동 소수점 값과 다음에 큰 절대치 실수 값의 포지티브 거리이다.","ULP(number)","number: 임의의 실수를 나타냅니다.","ULP(123.456) = <span class=\"ddp-txt-sub-det\">1.4210854715202004E-14</span>#ULP(1) = <span class=\"ddp-txt-sub-det\">2.220446049250313E-16</span>#ULP(-45) = <span class=\"ddp-txt-sub-det\">7.105427357601002E-15</span>#ULP(90) = <span class=\"ddp-txt-sub-det\">1.4210854715202004E-14</span>","Returns the size of the argument's pulp. The ULP of a floating point value is the positive distance between the floating point value and the absolute value of the next large error.","number: Indicates any error.","ULP(123.456) = <span class=\"ddp-txt-sub-det\">1.4210854715202004E-14</span>#ULP(1) = <span class=\"ddp-txt-sub-det\">2.220446049250313E-16</span>#ULP(-45) = <span class=\"ddp-txt-sub-det\">7.105427357601002E-15</span>#ULP(90) = <span class=\"ddp-txt-sub-det\">1.4210854715202004E-14</span>"
38,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,ATAN2,1,Y,0,"-Pi에서 Pi까지의 라디안에서 지정된 x, y 좌표의 아크탄젠트 값을 구합니다. 단 -Pi 값은 제외됩니다.","ATAN2(x_num, y_num)","x_num: 각을 구하려는 지점의 x 좌표입니다.#y_num: 각을 구하려는 지점의 y 좌표입니다.","ATAN2(90, 0) = <span class=\"ddp-txt-sub-det\">1.5707963267948966</span>#ATAN2(0, 90) = <span class=\"ddp-txt-sub-det\">0.0</span>#ATAN2(90, 90) = <span class=\"ddp-txt-sub-det\">0.7853981633974483</span>#ATAN2(90, -90) = <span class=\"ddp-txt-sub-det\">2.356194490192345</span>","Obtain the arctangent value of the x and y coordinates specified in the radians from -Pi to Pi. However, the -Pi value is excluded.","x_num: The x coordinate of the point at which you want to obtain an angle.#y_num: the y-coordinate of the point where you want to obtain an angle.","ATAN2(90, 0) = <span class=\"ddp-txt-sub-det\">1.5707963267948966</span>#ATAN2(0, 90) = <span class=\"ddp-txt-sub-det\">0.0</span>#ATAN2(90, 90) = <span class=\"ddp-txt-sub-det\">0.7853981633974483</span>#ATAN2(90, -90) = <span class=\"ddp-txt-sub-det\">2.356194490192345</span>"
39,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,COPYSIGN,1,Y,0,"두 번째 부동 소수점 인수의 부호와 최초의 부동 소수점 인수를 반환합니다.","COPYSIGN(magnitude, sign)","magnitude: 결과의 크기를 제공하는 파라미터입니다.#sign: 매개 변수는 결과의 부호를 제공합니다.","COPYSIGN(90, 0) = <span class=\"ddp-txt-sub-det\">90.0</span>#COPYSIGN(125.9f, -0.4873f) = <span class=\"ddp-txt-sub-det\">-125.9</span>#COPYSIGN(-0.4873f, 125.9f) = <span class=\"ddp-txt-sub-det\">0.4873</span>#COPYSIGN(90, -90) = <span class=\"ddp-txt-sub-det\">-90.0</span>","Returns the sign of the second floating point argument and the first floating point argument.","magnitude: Parameter that provides the size of the result.#sign: The parameter provides the sign of the result.","COPYSIGN(90, 0) = <span class=\"ddp-txt-sub-det\">90.0</span>#COPYSIGN(125.9f, -0.4873f) = <span class=\"ddp-txt-sub-det\">-125.9</span>#COPYSIGN(-0.4873f, 125.9f) = <span class=\"ddp-txt-sub-det\">0.4873</span>#COPYSIGN(90, -90) = <span class=\"ddp-txt-sub-det\">-90.0</span>"
40,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,HYPOT,1,Y,0,"직각삼각형의 빗변의 길이를 반환합니다.","HIPOT(x_num, y_num)","x_num: 임의의 실수를 나타냅니다.#y_num: 임의의 실수를 나타냅니다.","HYPOT(90, 0) = <span class=\"ddp-txt-sub-det\">90.0</span>#HYPOT(90, 90) = <span class=\"ddp-txt-sub-det\">127.27922061357856</span>#HYPOT(10, 30) = <span class=\"ddp-txt-sub-det\">31.622776601683793</span>#HYPOT(90, -90) = <span class=\"ddp-txt-sub-det\">-127.27922061357856</span>","Returns the length of the side of the right triangle.","x_num: Indicates any error.#y_num: Indicates any error.","HYPOT(90, 0) = <span class=\"ddp-txt-sub-det\">90.0</span>#HYPOT(90, 90) = <span class=\"ddp-txt-sub-det\">127.27922061357856</span>#HYPOT(10, 30) = <span class=\"ddp-txt-sub-det\">31.622776601683793</span>#HYPOT(90,-90) = <span class=\"ddp-txt-sub-det\">-127.27922061357856</span>"
41,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,REMAINDER,1,Y,0,"나눗셈의 나머지를 구합니다.","REMAINDER(number, divisor)","number: 나머지를 구하려는 수입니다.#divisor: 나누는 수입니다.","REMAINDER(90, 5) = <span class=\"ddp-txt-sub-det\">0</span>#REMAINDER(91, 90) = <span class=\"ddp-txt-sub-det\">1</span>#REMAINDER(10, 30) = <span class=\"ddp-txt-sub-det\">10</span>#REMAINDER(90, -90) = <span class=\"ddp-txt-sub-det\">0</span>","Find the rest of the division.","number: The number of times you want to get the rest.#divisor: Number of divisions.","REMAINDER(90, 5) = <span class=\"ddp-txt-sub-det\">0</span>#REMAINDER(91, 90) = <span class=\"ddp-txt-sub-det\">1</span>#REMAINDER(10, 30) = <span class=\"ddp-txt-sub-det\">10</span>#REMAINDER(90, -90) = <span class=\"ddp-txt-sub-det\">0</span>"
42,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,MAX,1,Y,0,"최대값을 구합니다.","MAX(number1, number2)","number1: 최대값을 구하려는 수입니다.#number2: 최대값을 구하려는 수입니다.","MAX(90, 5) = <span class=\"ddp-txt-sub-det\">90</span>#MAX(5, 90) = <span class=\"ddp-txt-sub-det\">90</span>#MAX(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#MAX(90, -90) = <span class=\"ddp-txt-sub-det\">90</span>","Obtain the maximum value.","number1: The number of times you want to obtain the maximum value.#number2: The number of times you want to get the maximum value.","MAX(90, 5) = <span class=\"ddp-txt-sub-det\">90</span>#MAX(5, 90) = <span class=\"ddp-txt-sub-det\">90</span>#MAX(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#MAX(90, -90) = <span class=\"ddp-txt-sub-det\">90</span>"
43,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,MIN,1,Y,0,"최소값을 구합니다.","MIN(number1, number2)","number1: 최소값을 구하려는 수입니다.#number2: 최소값을 구하려는 수입니다.","MIN(90, 5) = <span class=\"ddp-txt-sub-det\">5</span>#MIN(5, 90) = <span class=\"ddp-txt-sub-det\">5</span>#MIN(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#MIN(90, -90) = <span class=\"ddp-txt-sub-det\">-90</span>","Obtain the minimum value.","number1: The number of times you want to obtain the minimum value.#number2: The number of times you want to get the minimum value.","MIN(90, 5) = <span class=\"ddp-txt-sub-det\">5</span>#MIN(5, 90) = <span class=\"ddp-txt-sub-det\">5</span>#MIN(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#MIN(90,- 90) = <span class=\"ddp-txt-sub-det\">-90</span>"
44,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,NEXTAFTER,1,Y,0,"x>y 일 때는 실수로 표현할 수 있는 수 중에 현재 x보다 바로 작은 실수, x<y 일 때는 실수로 표현할 수 있는 수 중에 현재 x보다 바로 큰 실수, x=y 일 때는 x를 반환합니다.","NEXTAFTER(x_num, y_num)","x_num: 임의의 실수를 나타냅니다.#y_num: 임의의 실수를 나타냅니다.","NEXTAFTER(90, 5) = <span class=\"ddp-txt-sub-det\">89.99999999999999</span>#NEXTAFTER(5, 90) = <span class=\"ddp-txt-sub-det\">5.000000000000001</span>#NEXTAFTER(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#NEXTAFTER(90, -90) = <span class=\"ddp-txt-sub-det\">89.99999999999999</span>","x>y returns the error that can be expressed accidentally, x<y less than the current x, or x=y less than the current x.","x_num: Indicates any error.#y_num: Indicates any error.","NEXTAFTER(90, 5) = <span class=\"ddp-txt-sub-det\">89.99999999999999</span>#NEXTAFTER(5, 90) = <span class=\"ddp-txt-sub-det\">5.000000000000001</span>#NEXTAFTER(123, 123) = <span class=\"ddp-txt-sub-det\">123</span>#NEXTAFTER(90, -90) = <span class=\"ddp-txt-sub-det\">89.99999999999999</span>"
45,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,POW,1,Y,0,"밑수를 지정한 만큼 거듭제곱한 결과를 구합니다.","POW(number, power)","number: 밑수입니다.#power: 지수입니다.","POW(2, 4) = <span class=\"ddp-txt-sub-det\">16</span>#POW(4, 2) = <span class=\"ddp-txt-sub-det\">16</span>#POW(1.23, 3) = <span class=\"ddp-txt-sub-det\">1.8608669999999998</span>#POW(90, -2) = <span class=\"ddp-txt-sub-det\">1.234567901234568E-4</span>","Obtains the result of repeated subdivisions as specified.","Number: Base.#power: Index.","POW(2, 4) = <span class=\"ddp-txt-sub-det\">16</span>#POW(4, 2) = <span class=\"ddp-txt-sub-det\">16</span>#POW(1.23, 3) = <span class=\"ddp-txt-sub-det\">1.8608669999999998</span>#POW(90, -2) = <span class=\"ddp-txt-sub-det\">1.234567901234568E-4</span>"
46,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,SCALB,1,Y,0,"2의 exponent 승의 값에다, 플로팅 포인트값인 number를 곱한 결과를 반환한다.","SCALB(number, exponent)","number: 임의의 실수를 나타냅니다.#exponent: 밑수 2에 적용될 지수값입니다.","SCALB(2, 4) = <span class=\"ddp-txt-sub-det\">32</span>#SCALB(4, 2) = <span class=\"ddp-txt-sub-det\">16</span>#SCALB(1.23, 3) = <span class=\"ddp-txt-sub-det\">9.84</span>#SCALB(90, -2) = <span class=\"ddp-txt-sub-det\">22.5</span>","Returns the result of multiplying a floating point value number by an exponent of 2.","number: Indicates any error.#exponent: Exponential value to be applied to base 2.","SCALB(2, 4) = <span class=\"ddp-txt-sub-det\">32</span>#SCALB(4, 2) = <span class=\"ddp-txt-sub-det\">16</span>#SCALB(1.23, 3) = <span class=\"ddp-txt-sub-det\">9.84</span>#SCALB(90, -2) = <span class=\"ddp-txt-sub-det\">22.5</span>"
47,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,IF,1,Y,0,"논리 검사를 수행하여 TRUE나 FALSE에 해당하는 값을 반환합니다.","IF(logical_test, value_if_true, value_if_false)","logical_test: TRUE나 FALSE로 판정될 값이나 식입니다.#value_if_true: logical_test가 TRUE일 때 돌려주는 값입니다. 생략하면 TRUE를 반환합니다. IF 함수를 일곱 번 중첩해서 쓸 수 있습니다.#value_if_false: logical_test가 FALSE일 때 돌려주는 값입니다. 생략하면 FALSE를 반환합니다.","IF('TRUE', 10, -10) = <span class=\"ddp-txt-sub-det\">10</span>#IF('FALSE', 10, -10) = <span class=\"ddp-txt-sub-det\">-10</span>","Perform a logical check to return a value that corresponds to TRUE or FALSE.","logical_test: The value or expression to be determined as TRUE or FALSE.#value_if_true: value returned when logical_test is TRUE. Returns TRUE if omitted. You can overlay the IF function seven times.#value_if_false: The value returned when logical_test is FALSE. If omitted, returns FALSE.","IF('TRUE', 10, -10) = <span class=\"ddp-txt-sub-det\">10</span>#IF('FALSE', 10, -10) = <span class=\"ddp-txt-sub-det\">-10</span>"
48,PAGE-CALCULATION,TYPE_CONVERT,TYPE_CONVERT FIELD,TYPE_CONVERT FUNCTION,CAST,1,Y,0,"지정한 타입으로 값을 변환하여 반환합니다.","CAST(parameta, type)","parameta: 변환할 대상이 되는 문자열 혹은 숫자입니다.#type: 'FLOAT', 'DOUBLE', 'LONG', 'STRING', 'DATETIME' 중 하나로 변환할 타입입니다.","CAST('100.123', 'DOUBLE') = <span class=\"ddp-txt-sub-det\">100.123</span>#CAST(TIMESTAMP('2016-01-01T10:10:10'), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2016-01-01T10:10:10.000Z'</span>#CAST(1234, 'STRING') = <span class=\"ddp-txt-sub-det\"> '1234'</span>#CAST('100', 'LONG') = <span class=\"ddp-txt-sub-det\">100</span>","Convert and return the value to the specified type.","parameta: The string or number to be converted to.#type: Type to convert to one of 'FLOAT', 'DOUBLE', 'LONG', 'STRING', or 'DATETIME'.","CAST('100.123', 'DOUBLE') = <span class=\"ddp-txt-sub-det\">100.123</span>#CAST(TIMESTAMP('2016-01-01T10:10:10'), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2016-01-01T10:10:10.000Z'</span>#CAST(1234, 'STRING') = <span class=\"ddp-txt-sub-det\"> '1234'</span>#CAST('100', 'LONG') = <span class=\"ddp-txt-sub-det\">100</span>"
49,PAGE-CALCULATION,TYPE_CONVERT,TYPE_CONVERT FIELD,TYPE_CONVERT FUNCTION,TIMESTAMP,1,Y,0,"문자열 시간을 LONG 타입으로 변환합니다.","TIMESTAMP(datetime_string)#TIMESTAMP(datetime_string, format)#TIMESTAMP(datetime_string, format, timezone)#TIMESTAMP(datetime_string, format, timezone, locale)","datetime_string: 변환할 대상이 되는 날짜-시간을 표시하는 문자열입니다.#format: 입력된 문자열을 변환할 구조를 의미합니다. 입력이 없을 경우 'yyyy-MM-dd'T'HH:mm:ss[.SSS][ZZ]'가 적용됩니다.#timezone: 시간대입니다.#locale: 출력 언어입니다.","TIMESTAMP('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#TIMESTAMP('2013-05-04 20:20:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1367698800000</span>#CAST(TIMESTAMP('2015-02-04 23:00:00', 'yyyy-MM-dd HH:mm:ss'), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2015-02-04T23:00:00.000Z'</span>","Converts string time to LONG type.","datetime_string: A string that represents the date-time to be converted.#format: means the structure to convert the entered string. If no input is available, 'yyyy-MM-dd'T'HH:mm:ss[.SSS' applies.#timezone: Time zone.#locale: The output language.","TIMESTAMP('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#TIMESTAMP('2013-05-04 20:20:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1367698800000</span>#CAST(TIMESTAMP('2015-02-04 23:00:00', 'yyyy-MM-dd HH:mm:ss'), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2015-02-04T23:00:00.000Z'</span>"
50,PAGE-CALCULATION,TYPE_CONVERT,TYPE_CONVERT FIELD,TYPE_CONVERT FUNCTION,UNIX_TIMESTAMP,1,Y,0,"문자열 시간을 LONG 타입으로 변환합니다. TIMESTAMP()결과에 1000을 나눈값과 동일합니다.","UNIX_TIMESTAMP(datetime_string)#UNIX_TIMESTAMP(datetime_string, format)#TIMESTAMP(datetime_string, format, timezone)#TIMESTAMP(datetime_string, format, timezone, locale)","datetime_string: 변환할 대상이 되는 날짜-시간을 표시하는 문자열입니다.#format: 입력된 문자열을 변환할 구조를 의미합니다. 입력이 없을 경우 'yyyy-MM-dd'T'HH:mm:ss[.SSS][ZZ]'가 적용됩니다.#timezone: 시간대입니다.#locale: 출력 언어입니다.","UNIX_TIMESTAMP('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200</span>#UNIX_TIMESTAMP('2013-05-04 20:20:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1367698800</span>#CAST(UNIX_TIMESTAMP('2015-02-04 23:00:00', 'yyyy-MM-dd HH:mm:ss')*1000, 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2015-02-04T23:00:00.000Z'</span>","Converts string time to LONG type. TIMESTAMP() is the same as the result divided by 1000.","datetime_string: A string that represents the date-time to be converted.#format: means the structure to convert the entered string. If no input is available, 'yyyy-MM-dd'T'HH:mm:ss[.SSS' applies.#timezone: Time zone.#locale: The output language.","UNIX_TIMESTAMP('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200</span>#UNIX_TIMESTAMP('2013-05-04 20:20:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1367698800</span>#CAST(UNIX_TIMESTAMP('2015-02-04 23:00:00', 'yyyy-MM-dd HH:mm:ss')*1000, 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2015-02-04T23:00:00.000Z'</span>"
51,PAGE-CALCULATION,TYPE_CONVERT,TYPE_CONVERT FIELD,TYPE_CONVERT FUNCTION,TIME_FORMAT,1,Y,0,"시간을 지정한 구조에 따라 변환하여 문자열로 반환합니다.","TIME_FORMAT(datetime, out.format = , out.timezone = , out.locale =)","datetime: 변환할 대상이 되는 날짜-시간입니다.#out.format : 입력된 문자열을 변환할 구조를 의미합니다.#out.timezone : 입력된 문자열을 변환할 timezone을 의미합니다.#out.locale: 입력된 문자열을 변환할 지역을 의미합니다.","TIME_FORMAT(TIMESTAMP('2016-01-01T10:10:10'), out.format='yyyy-MM-dd') = <span class=\"ddp-txt-sub-det\">'2016-01-01'</span>#TIME_FORMAT(now(), out.format='yyyy-MM-dd EEEEEE', out.locale='ko') = <span class=\"ddp-txt-sub-det\">'2018-06-26 화요일'</span>#TIME_FORMAT('2016-01-01T10:10:10', out.format='yyyy-MM-dd') = <span class=\"ddp-txt-sub-det\">'2016-01-01'</span>#TIME_FORMAT(now(), 'yyyy-MM-dd EEEEEE', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'2018-06-26 화요일'</span>","Converts the time according to the specified structure and returns it to a string.","datetime: Date-time to convert.#out.format : means the structure to convert the entered string.#out.timezone : means the timezone to convert the entered string.#out.locale: means the region where you want to convert the entered string.","TIME_FORMAT(TIMESTAMP('2016-01-01T10:10:10'), out.format='yyyy-MM-dd') = <span class=\"ddp-txt-sub-det\">'2016-01-01'</span>#TIME_FORMAT(now(), out.format='yyyy-MM-dd EEEEEE', out.locale='ko') = <span class=\"ddp-txt-sub-det\">'2018-06-26 화요일'</span>#TIME_FORMAT('2016-01-01T10:10:10', out.format='yyyy-MM-dd') = <span class=\"ddp-txt-sub-det\">'2016-01-01'</span>#TIME_FORMAT(now(), 'yyyy-MM-dd EEEEEE', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'2018-06-26 화요일'</span>"
52,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,ISNULL,1,Y,0,"대상의 값이 NULL인 경우 1을 NULL이 아닌 경우 0을 반환합니다.","ISNULL(expr)","expr: null을 포함할 수 있는 값 또는 표현식입니다.","ISNULL('abc') = <span class=\"ddp-txt-sub-det\">0</span>#ISNULL('')= <span class=\"ddp-txt-sub-det\">1</span>#ISNULL(REGEX('Technology' , 'F.*')) = <span class=\"ddp-txt-sub-det\">1</span>","Returns 0 if the target's value is NULL, if 1 is not NULL.","expr: value or expression that can contain null.","ISNULL('abc') = <span class=\"ddp-txt-sub-det\">0</span>#ISNULL('')= <span class=\"ddp-txt-sub-det\">1</span>#ISNULL(REGEX('Technology' , 'F.*')) = <span class=\"ddp-txt-sub-det\">1</span>"
53,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,NVL,1,Y,0,"대상의 값이 NULL인 경우 지정된 값을 반환하고 NULL이 아닌 경우 대상의 값을 반환합니다.","NVL(expr1, expr2)","expr1: null을 포함할 수 있는 값 또는 표현식입니다.#expr2: null을 변환하기 위한 대상값입니다.","NVL('', 10) = <span class=\"ddp-txt-sub-det\">10</span>#NVL('abc', 10) = <span class=\"ddp-txt-sub-det\">'abc'</span>#NVL('', '123') = <span class=\"ddp-txt-sub-det\">'123'</span>","Returns the specified value if the value of the target is NULL and the value of the target if it is not NULL.","expr1: Value or expression that can contain null.#expr2: Target value for converting null.","NVL('', 10) = <span class=\"ddp-txt-sub-det\">10</span>#NVL('abc', 10) = <span class=\"ddp-txt-sub-det\">'abc'</span>#NVL('', '123') = <span class=\"ddp-txt-sub-det\">'123'</span>"
55,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DATEDIFF,1,Y,0,"두 날짜-시간의 날(day)의 차이를 반환합니다.","DATEDIFF(start_datetime, end_datetime)","start_datetime: 시작 날짜-시간입니다.#end_datetime: 끝 날짜-시간입니다.","DATEDIFF('2011-01-04 00:00:00', '2011-01-05 00:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#DATEDIFF('2011-01-06 00:00:00', '2011-01-05 00:00:00') = <span class=\"ddp-txt-sub-det\">-1</span>#DATEDIFF('2011-01-04 00:00:00', __time) = <span class=\"ddp-txt-sub-det\">timestamp field에서 '2011-01-04 00:00:00'를 뺀 차이를 날수(day)로 반환</span>","Returns the difference between two date-time days.","start_datetime: start date-time.#end_datetime: End date-time.","DATEDIFF('2011-01-04 00:00:00', '2011-01-05 00:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#DATEDIFF('2011-01-06 00:00:00', '2011-01-05 00:00:00') = <span class=\"ddp-txt-sub-det\">-1</span>#DATEDIFF('2011-01-04 00:00:00', __time) = <span class=\"ddp-txt-sub-det\">Timeestamp field minus '2011-01-04 00:00:00' returns in days</span>"
56,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,SWITCH,1,Y,0,"필드와 값을 비교하여 조건에 해당하는 값을 반환합니다.","SWITCH(dimesion_name , string1, string1_value, string2, string2_value, …., else_value)","dimesion_name: 조건을 확인할 대상 필드입니다.#string1: 필드와 비교할 값입니다.#string1_value: string1 이 필드 값과 같은 경우 반환할 값입니다.#string2: 필드와 비교할 값입니다.#string2_value: string2 이 필드 값과 같은 경우 반환할 값입니다.#else_value: 모든 조건이 만족하지 않은 경우 반환할 값입니다.","SWITCH('TEST01', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">10</span>#SWITCH('TEST02', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">20</span>#SWITCH('TEST03', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">30</span>#SWITCH([Category] , 'Furniture', 1, 'Office Supplies', 2, 0) = <span class=\"ddp-txt-sub-det\">category가 Furniture이면 1 Office Supplies이면 2 모두 아니면 0을 반환</span>","Compare the field with the value to return the value corresponding to the condition.","dimesion_name: The field to which you want to view the condition.#string1: Value to compare with field.#string1_value: string1 The value to return if this field value is the same.#string2: Value to compare with field.#string2_value: string2 The value to return if this field value is the same.#else_value: The value to return if all conditions are not met.","SWITCH('TEST01', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">10</span>#SWITCH('TEST02', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">20</span>#SWITCH('TEST03', 'TEST01', 10, 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">30</span>#SWITCH([Category] , 'Furniture', 1, 'Office Supplies', 2, 0) = <span class=\"ddp-txt-sub-det\">If the category is Furniture, if 1 Office Supplies, return 0 if not both.</span>"
57,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,CASE,1,Y,0,"논리 검사를 수행하여 TRUE에 해당하는 값을 반환합니다.","CASE(logical_test1, value_if_true1, logical_test2, value_if_true2, …., else_value)","logical_test1: TRUE나 FALSE로 판정될 값이나 식입니다.#value_if_true1: logical_test1가 TRUE일 때 돌려주는 값입니다.#logical_test2: TRUE나 FALSE로 판정될 값이나 식입니다.#value_if_true2: logical_test2가 TRUE일 때 돌려주는 값입니다#else_value: 모든 조건이 만족하지 않은 경우 반환할 값입니다.","CASE('TEST01' == 'TEST01', 10, 'TEST01' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">10</span>#CASE('TEST02' == 'TEST01', 10, 'TEST02' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">20</span>#CASE('TEST03' == 'TEST01', 10, 'TEST03' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">30</span>#CASE([Category] == 'Furniture', 1, Category == ''Office Supplies'', 2, 0) = <span class=\"ddp-txt-sub-det\">category가 Furniture이면 1 Office Supplies이면 2 모두 아니면 0을 반환</span>","Perform a logical check to return the value corresponding to TRUE.","logical_test1: The value or expression to be determined as TRUE or FALSE.#value_if_true1: The value returned when logical_test1 is TRUE.#logical_test2: The value or expression that will be determined as TRUE or FALSE.#value_if_true2: value returned when logical_test2 is TRUE#else_value: The value to return if all conditions are not met.","CASE('TEST01' == 'TEST01', 10, 'TEST01' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">10</span>#CASE('TEST02' == 'TEST01', 10, 'TEST02' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">20</span>#CASE('TEST03' == 'TEST01', 10, 'TEST03' == 'TEST02', 20, 30) = <span class=\"ddp-txt-sub-det\">30</span>#CASE([Category] == 'Furniture', 1, Category == ''Office Supplies'', 2, 0) = <span class=\"ddp-txt-sub-det\">Category is Furniture, 1 Office Supplies returns both or zero.</span>"
59,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,CONCAT,1,Y,0,"여러 텍스트를 한 텍스트로 조인시킵니다.","CONCAT(text1, text2,...)","text1: text1,text2,... 하나로 조인할 텍스트들 입니다.#text2: text1,text2,... 하나로 조인할 텍스트들 입니다.","CONCAT(\"Category\" , '::', \"Sub-Category\")</span>","Joins multiple text into one text.","text1: text1,text2,... text to join as one.#text2: text1,text2,... text to join as one.","CONCAT(\"Category\" , '::', \"Sub-Category\")</span>"
60,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,FORMAT,1,Y,0,"지정된 위치에 값을 대입해서 문자열을 만들어 반환합니다.","FORMAT(format, formatArg1,...)","format: 생성될 문자열의 정보를 가지고 있는 텍스트입니다.#formatArg1: formatArg1,… 생성될 문자열에 포함될 값들입니다.","FORMAT('abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#FORMAT('abc-%s-%d', '123', 123) = <span class=\"ddp-txt-sub-det\">'abc-123-123'</span>#FORMAT('abc-%03d-%f', 12, 123.0) = <span class=\"ddp-txt-sub-det\">'abc-012-123.000000'</span>","Creates and returns a string by substituting a value for the specified location.","format: text with information in the string to be generated.#formatArg1: formatArg1,... Values to be included in the string to be generated.","FORMAT('abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#FORMAT('abc-%s-%d', '123', 123) = <span class=\"ddp-txt-sub-det\">'abc-123-123'</span>#FORMAT('abc-%03d-%f', 12, 123.0) = <span class=\"ddp-txt-sub-det\">'abc-012-123.000000'</span>"
61,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LPAD,1,Y,0,"입력된 문자열의 길이가 부족한 만큼 왼쪽에 지정된 문자를 추가한 문자를 반환한다.","LPAD(text, length, character)","text: 대상이 되는 문자열입니다.#length: 반환하고자하는 문자열의 길이입니다.#character: 부족한 부분을 채워 넣을 문자입니다.","LPAD('123', 10, '0') = <span class=\"ddp-txt-sub-det\">'0000000123'</span>#LPAD('abc', 2, '0') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LPAD('abc', 5, '_') = <span class=\"ddp-txt-sub-det\">'__abc'</span>","Returns the character that adds the specified character to the left as the length of the entered string is insufficient.","text: The string to be targeted.#length: length of string to be returned.#character: character to fill out the missing part.","LPAD('123', 10, '0') = <span class=\"ddp-txt-sub-det\">'0000000123'</span>#LPAD('abc', 2, '0') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LPAD('abc', 5, '_') = <span class=\"ddp-txt-sub-det\">'__abc'</span>"
62,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,RPAD,1,Y,0,"입력된 문자열의 길이가 부족한 만큼 오른쪽에 지정된 문자를 추가한 문자를 반환한다.","RPAD(text, length, character)","text: 대상이 되는 문자열입니다.#length: 반환하고자하는 문자열의 길이입니다.#character: 부족한 부분을 채워 넣을 문자입니다.","RPAD('123', 10, '0') = <span class=\"ddp-txt-sub-det\">'1230000000'</span>#RPAD('abc', 2, '0') = <span class=\"ddp-txt-sub-det\">'abc'</span>#RPAD('abc', 5, '_') = <span class=\"ddp-txt-sub-det\">'abc__'</span>","Returns the character that adds the specified character to the right as the length of the entered string is insufficient.","text: The string to be targeted.#length: length of string to be returned.#character: character to fill out the missing part.","RPAD('123', 10, '0') = <span class=\"ddp-txt-sub-det\">'1230000000'</span>#RPAD('abc', 2, '0') = <span class=\"ddp-txt-sub-det\">'abc'</span>#RPAD('abc', 5, '_') = <span class=\"ddp-txt-sub-det\">'abc__'</span>"
63,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,UPPER,1,Y,0,"텍스트 문자열을 모두 대문자로 바꿉니다.","UPPER(text)","text: 대문자로 바꾸려는 텍스트입니다.","UPPER('abc') = <span class=\"ddp-txt-sub-det\">'ABC'</span>#UPPER('Abc') = <span class=\"ddp-txt-sub-det\">'ABC'</span>#UPPER('ABC') = <span class=\"ddp-txt-sub-det\">'ABC'</span>","Capitalize all text strings.","text: Text to replace with a capital letter.","UPPER('abc') = <span class=\"ddp-txt-sub-det\">'ABC'</span>#UPPER('Abc') = <span class=\"ddp-txt-sub-det\">'ABC'</span>#UPPER('ABC') = <span class=\"ddp-txt-sub-det\">'ABC'</span>"
64,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LOWER,1,Y,0,"텍스트 문자열의 모든 문자를 소문자로 변환합니다.","LOWER(text)","text: 소문자로 바꾸려는 텍스트입니다. 문자가 아닌 경우는 변환되지 않습니다.","LOWER('abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LOWER('Abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LOWER('ABC') = <span class=\"ddp-txt-sub-det\">'abc'</span>","Converts all characters in a text string to lowercase.","text: Text to replace with lowercase letters. If it is not a character, it will not be converted.","LOWER('abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LOWER('Abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LOWER('ABC') = <span class=\"ddp-txt-sub-det\">'abc'</span>"
65,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,SPLIT,1,Y,0,"특정 분리자로 문자열을 분리하여 지정된 위치의 문자열을 반환합니다.","SPLIT(text, delimitor, index)","text: 대상이 되는 문자열입니다.#delimitor: 문자열을 분해하고자 하는 분리자입니다.#index: 반환하고자 하는 분해된 문자열의 위치입니다.","SPLIT('first:second', ':', 0) = <span class=\"ddp-txt-sub-det\">'first'</span>#SPLIT('first:second', ':', 1) = <span class=\"ddp-txt-sub-det\">'second'</span>#SPLIT('first:second', ':', 2) = <span class=\"ddp-txt-sub-det\">null</span>#SPLIT('first:second', ',', 0) = <span class=\"ddp-txt-sub-det\">'first:second'</span>","Returns a string at a specified location by separating the string with a specific separator.","text: The string to be targeted.#delimitor: Is the separator where you want to break down the string.#index: The location of the disassembled string that you want to return.","SPLIT('first:second', ':', 0) = <span class=\"ddp-txt-sub-det\">'first'</span>#SPLIT('first:second', ':', 1) = <span class=\"ddp-txt-sub-det\">'second'</span>#SPLIT('first:second', ':', 2) = <span class=\"ddp-txt-sub-det\">null</span>#SPLIT('first:second', ',', 0) = <span class=\"ddp-txt-sub-det\">'first:second'</span>"
66,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,SPLITREGEX,1,Y,0,"특정 분리자(정규표현식)로 문자열을 분리하여 지정된 위치의 문자열을 반환합니다.","SPLITREGEX(text, delimitor, index)","text: 대상이 되는 문자열입니다.#delimitor: 문자열을 분해하고자 하는 정규표현식으로 표현된 분리자입니다.#index: 반환하고자 하는 분해된 문자열의 위치입니다.","SPLITREGEX('first/second', '\/', 0) = <span class=\"ddp-txt-sub-det\">'first'</span>#SPLITREGEX('first/second', '\/', 1) = <span class=\"ddp-txt-sub-det\">'second'</span>#SPLITREGEX('first/second', '\/', 2) = <span class=\"ddp-txt-sub-det\">null</span>#SPLITREGEX('first/second', ',', 0) = <span class=\"ddp-txt-sub-det\">'first/second'</span>","Returns a string at a specified location by separating the string with a specific separator (regular expression).","text: The string to be targeted.#delimitor: Separator expressed as a regular expression to break down the string.#index: The location of the disassembled string that you want to return.","SPLITREGEX('first/second', '\/', 0) = <span class=\"ddp-txt-sub-det\">'first'</span>#SPLITREGEX('first/second', '\/', 1) = <span class=\"ddp-txt-sub-det\">'second'</span>#SPLITREGEX('first/second', '\/', 2) = <span class=\"ddp-txt-sub-det\">null</span>#SPLITREGEX('first/second', ',', 0) = <span class=\"ddp-txt-sub-det\">'first/second'</span>"
67,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,PROPER,1,Y,0,"각 단어의 첫째 문자를 대문자로 변환하고 나머지 문자는 소문자로 변환합니다.","PROPER(text)","text: 대상이 되는 문자열입니다.","PROPER('abc') = <span class=\"ddp-txt-sub-det\">'Abc'</span>#PROPER('ABC') = <span class=\"ddp-txt-sub-det\">'Abc'</span>#PROPER('123') = <span class=\"ddp-txt-sub-det\">'123'</span>#PROPER('') = <span class=\"ddp-txt-sub-det\">''</span>","Convert the first letter of each word to uppercase and the rest to lowercase.","text: The string to be targeted.","PROPER('abc') = <span class=\"ddp-txt-sub-det\">'Abc'</span>#PROPER('ABC') = <span class=\"ddp-txt-sub-det\">'Abc'</span>#PROPER('123') = <span class=\"ddp-txt-sub-det\">'123'</span>#PROPER('') = <span class=\"ddp-txt-sub-det\">''</span>"
68,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LENGTH,1,Y,0,"텍스트 문자열 내의 문자 개수를 구합니다.","LENGTH(text)","text: 사용자가 찾는 개수의 문자가 들어 있는 텍스트입니다. 공백도 문자 개수에 포함됩니다.","LENGTH('abc') = <span class=\"ddp-txt-sub-det\">3</span>#LENGTH('') = <span class=\"ddp-txt-sub-det\">0</span>#LENGTH('123 abc') = <span class=\"ddp-txt-sub-det\">7</span>","Gets the number of characters in the text string.","text: Text that contains the number of characters you are looking for. Spaces are also included in the number of characters.","LENGTH('abc') = <span class=\"ddp-txt-sub-det\">3</span>#LENGTH('') = <span class=\"ddp-txt-sub-det\">0</span>#LENGTH('123 abc') = <span class=\"ddp-txt-sub-det\">7</span>"
69,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,STRLEN,1,Y,0,"텍스트 문자열 내의 문자 개수를 구합니다.","STRLEN(text)","text: 사용자가 찾는 개수의 문자가 들어 있는 텍스트입니다. 공백도 문자 개수에 포함됩니다.","STRLEN('abc') = <span class=\"ddp-txt-sub-det\">3</span>#STRLEN('') = <span class=\"ddp-txt-sub-det\">0</span>#STRLEN('123 abc') = <span class=\"ddp-txt-sub-det\">7</span>","Gets the number of characters in the text string.","text: Text that contains the number of characters you are looking for. Spaces are also included in the number of characters.","STRLEN('abc') = <span class=\"ddp-txt-sub-det\">3</span>#STRLEN('') = <span class=\"ddp-txt-sub-det\">0</span>#STRLEN('123 abc') = <span class=\"ddp-txt-sub-det\">7</span>"
70,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LEFT,1,Y,0,"텍스트 문자열의 시작 지점부터 지정한 수만큼의 문자를 반환합니다.","LEFT(text, num_chars)","text: 추출하려는 문자가 들어 있는 텍스트 문자열입니다.#num_chars: 왼쪽(LEFT)부터 추출할 문자 수를 지정합니다.","LEFT('abcdefg', 3) = <span class=\"ddp-txt-sub-det\">'abc'</span>#LEFT('abc', 5) = <span class=\"ddp-txt-sub-det\">'abc'</span>#LEFT('123 abc', 5) = <span class=\"ddp-txt-sub-det\">'123 a'</span>","Returns the specified number of characters from the start point of the text string.","text: Text string containing the characters you want to extract.#num_chars: Specifies the number of characters to extract from the left (LEFT).","LEFT('abcdefg', 3) = <span class=\"ddp-txt-sub-det\">'abc'</span>#LEFT('abc', 5) = <span class=\"ddp-txt-sub-det\">'abc'</span>#LEFT('123 abc', 5) = <span class=\"ddp-txt-sub-det\">'123 a'</span>"
71,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,RIGHT,1,Y,0,"텍스트 문자열의 끝 지점부터 지정한 수만큼의 문자를 반환합니다.","RIGHT(text, num_chars)","text: 추출하려는 문자가 들어 있는 텍스트 문자열입니다.#num_chars: 추출할 문자 수를 지정합니다.","RIGHT('abcdefg', 3) = <span class=\"ddp-txt-sub-det\">'efg'</span>#RIGHT('abc', 5) = <span class=\"ddp-txt-sub-det\">'abc'</span>#RIGHT('123 abc', 5) = <span class=\"ddp-txt-sub-det\">'3 abc'</span>","Returns the specified number of characters from the end point of the text string.","text: Text string containing the characters you want to extract.#num_chars: Specifies the number of characters to extract.","RIGHT('abcdefg', 3) = <span class=\"ddp-txt-sub-det\">'efg'</span>#RIGHT('abc', 5) = <span class=\"ddp-txt-sub-det\">'abc'</span>#RIGHT('123 abc', 5) = <span class=\"ddp-txt-sub-det\">'3 abc'</span>"
72,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,MID,1,Y,0,"시작 위치 및 마지막 위치가 지정된 텍스트 문자열의 중간 부분에서 문자를 반환합니다.","MID(text, start_num, end_num)","text: 문자를 추출할 텍스트 문자열입니다.#start_num: 추출할 첫 문자의 위치입니다. 텍스트에서 첫 문자는 0이 됩니다.#end_num: 추출할 마지막 문자의 다음 위치입니다.","MID('abcdefg', 1, 5) = <span class=\"ddp-txt-sub-det\">'bcde'</span>#MID('abc', 2, 3) = <span class=\"ddp-txt-sub-det\">'c'</span>#MID('123 abc', 4, 4) = <span class=\"ddp-txt-sub-det\">''</span>","The start and last position return characters from the middle of the specified text string.","text: Text string to extract characters from.#start_num: Location of the first character to be extracted. The first letter in the text will be zero.#end_num: The next location for the last character to be extracted.","MID('abcdefg', 1, 5) = <span class=\"ddp-txt-sub-det\">'bcde'</span>#MID('abc', 2, 3) = <span class=\"ddp-txt-sub-det\">'c'</span>#MID('123 abc', 4, 4) = <span class=\"ddp-txt-sub-det\">''</span>"
73,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,SUBSTRING,1,Y,0,"시작 위치에서 지정한 길이만큼을 지정된 텍스트 문자열의 중간 부분에서 문자를 반환합니다.","SUBSTRING(text, start_num, length)","text: 문자를 추출할 텍스트 문자열입니다.#start_num: 추출할 첫 문자의 위치입니다. 텍스트에서 첫 문자는 0이 됩니다.#length: 추출할 문자열의 길이입니다.","SUBSTRING('abcdefg', 1, 5) = <span class=\"ddp-txt-sub-det\">'bcde'</span>#SUBSTRING('abc', 2, 3) = <span class=\"ddp-txt-sub-det\">'c'</span>#SUBSTRING('123 abc', 4, 4) = <span class=\"ddp-txt-sub-det\">''</span>","Returns a character from the middle of the specified text string for the length specified in the start position.","text: Text string to extract characters from.#start_num: Location of the first character to be extracted. The first letter in the text will be zero.#length: length of string to extract.","SUBSTRING('abcdefg', 1, 5) = <span class=\"ddp-txt-sub-det\">'bcde'</span>#SUBSTRING('abc', 2, 3) = <span class=\"ddp-txt-sub-det\">'c'</span>#SUBSTRING('123 abc', 4, 4) = <span class=\"ddp-txt-sub-det\">''</span>"
74,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,INDEXOF,1,Y,0,"텍스트 문자열에서 지정된 문자열을 찾아 그 위치를 반환합니다.","INDEXOF(text, find_text)","text: 대상이 되는 텍스트 문자열입니다.#find_text: 찾고자하는 텍스트 문자열입니다.","INDEXOF('abcdefg', 'cde') = <span class=\"ddp-txt-sub-det\">2</span>#INDEXOF('abcdefg', 'bdf') = <span class=\"ddp-txt-sub-det\">-1</span>#INDEXOF('123 abc', '3 a') = <span class=\"ddp-txt-sub-det\">2</span>","Finds the specified string in the text string and returns its location.","text: The text string to which it is targeted.#find_text: The text string you want to find.","INDEXOF('abcdefg', 'cde') = <span class=\"ddp-txt-sub-det\">2</span>#INDEXOF('abcdefg', 'bdf') = <span class=\"ddp-txt-sub-det\">-1</span>#INDEXOF('123 abc', '3 a') = <span class=\"ddp-txt-sub-det\">2</span>"
75,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,REPLACE,1,Y,0,"텍스트 문자열에서 지정된 문자열을 찾아 다른 문자열로 치환합니다.","REPLACE(text, find_text, replace_text)","text: 대상이 되는 텍스트 문자열입니다.#find_text: 찾고자하는 텍스트 문자열입니다.","REPLACE('abcdefg', 'cde', '-') = <span class=\"ddp-txt-sub-det\">'ab-fg'</span>#REPLACE('abcdefg', 'bdf', '-') = <span class=\"ddp-txt-sub-det\">'abcdefg'</span>#REPLACE('1 2 3', ' ', ' AND ') = <span class=\"ddp-txt-sub-det\">'1 AND 2 AND 3'</span>","Finds the specified string in the text string and replaces it with another string.","text: The text string to which it is targeted.#find_text: The text string you want to find.","REPLACE('abcdefg', 'cde', '-') = <span class=\"ddp-txt-sub-det\">'ab-fg'</span>#REPLACE('abcdefg', 'bdf', '-') = <span class=\"ddp-txt-sub-det\">'abcdefg'</span>#REPLACE('1 2 3', ' ', ' AND ') = <span class=\"ddp-txt-sub-det\">'1 AND 2 AND 3'</span>"
76,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,TRIM,1,Y,0,"단어 사이에 들어간 공백 하나를 제외하고 텍스트 문자열에서 모든 공백을 제거합니다.","TRIM(text)","text: 공백을 제거하려는 텍스트입니다.","TRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#TRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#TRIM(' a b c ') = <span class=\"ddp-txt-sub-det\">'a b c'</span>","Remove all spaces from the text string except for one space that is entered between words.","text: Text to remove spaces.","TRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#TRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#TRIM(' a b c ') = <span class=\"ddp-txt-sub-det\">'a b c'</span>"
77,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,BTRIM,1,Y,0,"대상 문자열에서 왼쪽, 오른쪽에 있는 공백 혹은 제거할 문자열을 제거하여 반환합니다.","BTRIM(text)#BTRIM(text, strip)","text: 공백을 제거하려는 텍스트입니다.#strip: 제거할 문자열입니다.","BTRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#BTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#BTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'123'</span>","Returns by removing the left, right, or left space from the destination string or the string to be removed.","text: Text to remove spaces.#strip: String to remove.","BTRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#BTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#BTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'123'</span>"
78,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,LTRIM,1,Y,0,"대상 문자열에서 왼쪽에 있는 공백 혹은 제거할 문자열을 제거하여 반환합니다.","LTRIM(text)#LTRIM(text, strip)","text: 공백을 제거하려는 텍스트입니다.#strip: 제거할 문자열입니다.","LTRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc '</span>#LTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'123abc'</span>","Returns by removing the space on the left or the string you want to remove from the destination string.","text: Text to remove spaces.#strip: String to remove.","LTRIM(' abc') = <span class=\"ddp-txt-sub-det\">'abc'</span>#LTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc '</span>#LTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'123abc'</span>"
79,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,RTRIM,1,Y,0,"대상 문자열에서 오른쪽에 있는 공백 혹은 제거할 문자열을 제거하여 반환합니다.","RTRIM(text)#RTRIM(text, strip)","text: 공백을 제거하려는 텍스트입니다.#strip: 제거할 문자열입니다.","RTRIM(' abc') = <span class=\"ddp-txt-sub-det\">' abc'</span>#RTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#RTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'abc123'</span>","Returns by removing the space to the right or the string to remove from the destination string.","text: Text to remove spaces.#strip: String to remove.","RTRIM(' abc') = <span class=\"ddp-txt-sub-det\">' abc'</span>#RTRIM('abc ') = <span class=\"ddp-txt-sub-det\">'abc'</span>#RTRIM('abc123abc','abc') = <span class=\"ddp-txt-sub-det\">'abc123'</span>"
82,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,IN,1,Y,0,"첫째 입력 값이 다른 입력 값에 있는 지를 확인하여 있으면 1 없으면 0을 반환합니다.","IN(search, value1, value2,...)","search: 찾고자 하는 값입니다.#value1: value1,value2,... 비교 대상이 되는 값들입니다.","IN(10, 1, 10, 100) = <span class=\"ddp-txt-sub-det\">1</span>#IN(0, 1, 10, 100) = <span class=\"ddp-txt-sub-det\">0</span>#IN('abc', '123', 'abc', 'efg', '456') = <span class=\"ddp-txt-sub-det\">1</span>","If the first input value is checked to see if it is in another input value, return zero if it does not exist.","search: The value you want to find.#value1: value1,value2,... Values to be compared.","IN(10, 1, 10, 100) = <span class=\"ddp-txt-sub-det\">1</span>#IN(0, 1, 10, 100) = <span class=\"ddp-txt-sub-det\">0</span>#IN('abc', '123', 'abc', 'efg', '456') = <span class=\"ddp-txt-sub-det\">1</span>"
83,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,BETWEEN,1,Y,0,"첫째 입력 값이 범위에 속하는지를 확인하여 있으면 1 없으면 0을 반환합니다.","BETWEEN(search, start_value, end_value)","search: 찾고자 하는 값입니다.#start_value: 비교 범위의 시작이 되는 값입니다.#end_value: 비교 범위의 끝이 되는 값입니다.","BETWEEN(10, 1, 100) = <span class=\"ddp-txt-sub-det\">1</span>#BETWEEN(0, 1, 100) = <span class=\"ddp-txt-sub-det\">0</span>#BETWEEN('aab', 'aaa', 'aac') = <span class=\"ddp-txt-sub-det\">1</span>","If the first input value is in range, returns zero if it is not in 1.","search: The value you want to find.#start_value: The value that starts the comparison range.#end_value: The value that ends the comparison range.","BETWEEN(10, 1, 100) = <span class=\"ddp-txt-sub-det\">1</span>#BETWEEN(0, 1, 100) = <span class=\"ddp-txt-sub-det\">0</span>#BETWEEN('aab', 'aaa', 'aac') = <span class=\"ddp-txt-sub-det\">1</span>"
84,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,STARTSWITH,1,Y,0,"대상 문자열이 시작 문자열로 시작하는지를 확인하여 같으면 1 다르면 0을 반환합니다.","STARTSWITH(search, prefix)","search: 대상이 되는 문자열입니다.#prefix: 매칭을 확인하고자하는 시작 문자열입니다.","STARTSWITH('abcdef', 'abc') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITH('abcdef', 'aabc') = <span class=\"ddp-txt-sub-det\">0</span>#STARTSWITH('1234', '12') = <span class=\"ddp-txt-sub-det\">1</span>","Verify that the destination string starts with the start string, and if it is the same, if different.","search: The string to be targeted.#prefix: Start string to check matches.","STARTSWITH('abcdef', 'abc') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITH('abcdef', 'aabc') = <span class=\"ddp-txt-sub-det\">0</span>#STARTSWITH('1234', '12') = <span class=\"ddp-txt-sub-det\">1</span>"
85,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,ENDSWITH,1,Y,0,"대상 문자열이 시작 문자열로 끝나는지를 확인하여 같으면 1 다르면 0을 반환합니다.","ENDSWITH(search, suffix)","search: 대상이 되는 문자열입니다.#suffix: 매칭을 확인하고자하는 끝 문자열입니다.","ENDSWITH('abcdef', 'def') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITH('abcdef', 'de') = <span class=\"ddp-txt-sub-det\">0</span>#ENDSWITH('1234', '1234') = <span class=\"ddp-txt-sub-det\">1</span>","Verify that the destination string ends with the start string, and if it is the same, if different.","search: The string to be targeted.#suffix: The end string to determine the match.","ENDSWITH('abcdef', 'def') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITH('abcdef', 'de') = <span class=\"ddp-txt-sub-det\">0</span>#ENDSWITH('1234', '1234') = <span class=\"ddp-txt-sub-det\">1</span>"
86,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,STARTSWITHIGNORECASE,1,Y,0,"대상 문자열이 대소문자를 무시하고 시작 문자열로 시작하는지를 확인하여 같으면 1 다르면 0을 반환합니다.","STARTSWITHIGNORECASE(search,prefix)","search: 대상이 되는 문자열입니다.#prefix: 매칭을 확인하고자하는 시작 문자열입니다.","STARTSWITHIGNORECASE('ABCDEF', 'abc') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITHIGNORECASE('abcdef', 'ABC') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITHIGNORECASE('1234', 'a12') = <span class=\"ddp-txt-sub-det\">0</span>","Confirm that the target string overrides the case and begins with the start string, if equal, returns 0.","search: The string to be targeted.#prefix: Start string to check matches.","STARTSWITHIGNORECASE('ABCDEF', 'abc') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITHIGNORECASE('abcdef', 'ABC') = <span class=\"ddp-txt-sub-det\">1</span>#STARTSWITHIGNORECASE('1234', 'a12') = <span class=\"ddp-txt-sub-det\">0</span>"
87,PAGE-CALCULATION,LOGICAL,LOGICAL FIELD,LOGICAL FUNCTION,ENDSWITHIGNORECASE,1,Y,0,"대상 문자열이 대소문자를 무시하고 시작 문자열로 끝나는지를 확인하여 같으면 1 다르면 0을 반환합니다.","ENDSWITHIGNORECASE(search, suffix)","search: 대상이 되는 문자열입니다.#suffix: 매칭을 확인하고자하는 끝 문자열입니다.","ENDSWITHIGNORECASE('ABCDEF', 'def') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITHIGNORECASE('abcdef', 'deF') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITHIGNORECASE('1234', '34') = <span class=\"ddp-txt-sub-det\">1</span>","Confirm that the target string overrides the case and ends with the start string, if equal, returns 0.","search: The string to be targeted.#suffix: The end string to determine the match.","ENDSWITHIGNORECASE('ABCDEF', 'def') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITHIGNORECASE('abcdef', 'deF') = <span class=\"ddp-txt-sub-det\">1</span>#ENDSWITHIGNORECASE('1234', '34') = <span class=\"ddp-txt-sub-det\">1</span>"
88,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,CONTAINS,1,Y,0,"텍스트 문자열에서 지정된 문자열을 찾아 있으면 1 없으면 0을 반환합니다.","CONTAINS(text, find_text)","text: 대상이 되는 텍스트 문자열입니다.#find_text: 찾고자하는 텍스트 문자열입니다.","CONTAINS('abcdefg', 'cde') = <span class=\"ddp-txt-sub-det\">1</span>#CONTAINS('abcdefg', 'bdf') = <span class=\"ddp-txt-sub-det\">0</span>#CONTAINS('123 abc', '3 a') = <span class=\"ddp-txt-sub-det\">1</span>","If a specified string is found in the text string, returns 0 if not 1.","text: The text string to which it is targeted.#find_text: The text string you want to find.","CONTAINS('abcdefg', 'cde') = <span class=\"ddp-txt-sub-det\">1</span>#CONTAINS('abcdefg', 'bdf') = <span class=\"ddp-txt-sub-det\">0</span>#CONTAINS('123 abc', '3 a') = <span class=\"ddp-txt-sub-det\">1</span>"
89,PAGE-CALCULATION,STRING,STRING FIELD,STRING FUNCTION,MATCH,1,Y,0,"regex_text으로 match를 확인하여 matching되면 1 아니면 0을 반환합니다.","MATCH(text , regex_text)","text: 대상이 되는 텍스트 문자열입니다.#regex_text: 찾고자하는 정규 표현식 문자열입니다.","MATCH('Funiture' , 'F.*') = <span class=\"ddp-txt-sub-det\">1</span>#MATCH('Funiture' , 'tu.*') = <span class=\"ddp-txt-sub-det\">1</span>#MATCH('Technology' , 'F.*') = <span class=\"ddp-txt-sub-det\">0</span>","Check match with regex_text and return 1 or 0.","text: The text string to which it is targeted.#regex_text: The regular expression string you want to find.","MATCH('Funiture' , 'F.*') = <span class=\"ddp-txt-sub-det\">1</span>#MATCH('Funiture' , 'tu.*') = <span class=\"ddp-txt-sub-det\">1</span>#MATCH('Technology' , 'F.*') = <span class=\"ddp-txt-sub-det\">0</span>"
90,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,NOW,1,Y,0,"현재 시간을 반환합니다.","NOW()","","NOW() = <span class=\"ddp-txt-sub-det\">1496033278862</span>#CAST(NOW(), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2017-05-29T04:47:58.862Z'</span>#DATEDIFF('2011-01-04 00:00:00', NOW()) = <span class=\"ddp-txt-sub-det\">2337</span>","Returns the current time.","","NOW() = <span class=\"ddp-txt-sub-det\">1496033278862</span>#CAST(NOW(), 'DATETIME') = <span class=\"ddp-txt-sub-det\">'2017-05-29T04:47:58.862Z'</span>#DATEDIFF('2011-01-04 00:00:00', NOW()) = <span class=\"ddp-txt-sub-det\">2337</span>"
91,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,CURRENT_TIME,1,Y,0,"현재 시간을 문자열로 반환합니다.","CURRENT_TIME()","","CURRENT_TIME() = <span class=\"ddp-txt-sub-det\">'2018-06-20T00:49:43.753Z'</span>#DATEDIFF('2011-01-04 00:00:00', CURRENT_TIME()) = <span class=\"ddp-txt-sub-det\">2724</span>","Returns the current time as a string.","","CURRENT_TIME() = <span class=\"ddp-txt-sub-det\">'2018-06-20T00:49:43.753Z'</span>#DATEDIFF('2011-01-04 00:00:00', CURRENT_TIME()) = <span class=\"ddp-txt-sub-det\">2724</span>"
92,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,RECENT,1,Y,0,"현재 시간을 기준으로 입력된 범위에 따라 기간을 반환합니다.","RECENT(beforenow)#RECENT(beforenow, afternow)","beforenow: 현재 시간을 기준으로 이전 시간까지의 기간입니다. (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)#afternow: 현재 시간을 기준으로 이후 시간까지의 기간입니다.","RECENT('12M') = <span class=\"ddp-txt-sub-det\">'2017-06-20T00:38:10.407Z/2018-06-20T00:38:10.407Z'</span>#RECENT('30D','30H') = <span class=\"ddp-txt-sub-det\">'2018-05-21T00:38:10.408Z/2018-06-18T18:38:10.408Z'</span>","Returns the duration based on the range entered based on the current time.","beforenow: The period from the current time to the previous time. (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)#aflow: The period from the current time to the later time.","RECENT('12M') = <span class=\"ddp-txt-sub-det\">'2017-06-20T00:38:10.407Z/2018-06-20T00:38:10.407Z'</span>#RECENT('30D','30H') = <span class=\"ddp-txt-sub-det\">'2018-05-21T00:38:10.408Z/2018-06-18T18:38:10.408Z'</span>"
93,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,BUCKETSTART,1,Y,0,"기준 시간이 속하는 시간 단위 bucket의 시작 시간을 millisecond로 반환합니다.","BUCKETSTART(base_time, granularity_type)","base_time: 기준이 되는 시간입니다.#granularity_type: bucket의 크기를 의미하는 시간의 단위입니다. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT5H, SIX_HOUR-PT6H,DAY-P1D, WEEK-P1W, MONTH-P1M, QUARTER-P3M, YEAR-P1Y)","BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> 1517652600000</span>#BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">1517652600000</span>#BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">1514764800000</span>","Returns the start time in milliscond for the unit of time bucket to which the reference time belongs.","Base_time: The time by which it is based.#granularity_type: The unit of time that represents the size of the bucket. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT6H, SIX_HOUR-PT6H,DAY-P1D, WEKE-P1WWWWHERP, Q1P1P, M1TWERM","BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> 1517652600000</span>#BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">1517652600000</span>#BUCKETSTART(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">1514764800000</span>"
94,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,BUCKETEND,1,Y,0,"기준 시간이 속하는 시간 단위 bucket의 끝 시간을 millisecond로 반환합니다.","BUCKETEND(base_time, granularity_type)","base_time: 기준이 되는 시간입니다.#granularity_type: bucket의 크기를 의미하는 시간의 단위입니다. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT5H, SIX_HOUR-PT6H,DAY-P1D, WEEK-P1W, MONTH-P1M, QUARTER-P3M, YEAR-P1Y)","BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> 1517653200000</span>#BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">1517653200000</span>#BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">1546300800000</span>","Returns the end time of the unit of time bucket to which the reference time belongs in milliscond.","Base_time: The time by which it is based.#granularity_type: The unit of time that represents the size of the bucket. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT6H, SIX_HOUR-PT6H,DAY-P1D, WEKE-P1WWWWHERP, Q1P1P, M1TWERM","BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> 1517653200000</span>#BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">1517653200000</span>#BUCKETEND(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">1546300800000</span>"
95,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,BUCKETSTARTDATETIME,1,Y,0,"기준 시간이 속하는 시간 단위 bucket의 시작 시간을 datetime으로 반환합니다.","BUCKETSTARTDATETIME(base_time, granularity_type)","base_time: 기준이 되는 시간입니다.#granularity_type: bucket의 크기를 의미하는 시간의 단위입니다. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT5H, SIX_HOUR-PT6H,DAY-P1D, WEEK-P1W, MONTH-P1M, QUARTER-P3M, YEAR-P1Y)","BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> '2018-02-03T10:10:00.000Z'</span>#BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:10:00.000Z'</span>#BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">'2018-01-01T00:00:00.000Z'</span>","Returns the start time in datetime for the unit of time buckets to which the reference time belongs.","Base_time: The time by which it is based.#granularity_type: The unit of time that represents the size of the bucket. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT6H, SIX_HOUR-PT6H,DAY-P1D, WEKE-P1WWWWHERP, Q1P1P, M1TWERM","BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\"> '2018-02-03T10:10:00.000Z'</span>#BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:10:00.000Z'</span>#BUCKETSTARTDATETIME(DATETIME('2018-02-03T10:12:10'), 'YEAR') = <span class=\"ddp-txt-sub-det\">'2018-01-01T00:00:00.000Z'</span>"
96,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,BUCKETENDDATETIME,1,Y,0,"기준 시간이 속하는 시간 단위 bucket의 끝 시간을 datetime으로 반환합니다.","BUCKETENDDATETIME(base_time, granularity_type)","base_time: 기준이 되는 시간입니다.#granularity_type: bucket의 크기를 의미하는 시간의 단위입니다. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT5H, SIX_HOUR-PT6H,DAY-P1D, WEEK-P1W, MONTH-P1M, QUARTER-P3M, YEAR-P1Y)","BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:20:00.000Z'</span>#BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:20:00.000Z'</span>#BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), YEAR') = <span class=\"ddp-txt-sub-det\">'2019-01-01T00:00:00.000Z'</span>","Returns the end time in datetime of the unit of time bucket to which the reference time belongs.","Base_time: The time by which it is based.#granularity_type: The unit of time that represents the size of the bucket. (SECOND-PT1S, MINUTE-PT1M, FIVE_MINUTE-PT5M, TEN_MINUTE-PT10M, HOUR-PT6H, SIX_HOUR-PT6H,DAY-P1D, WEKE-P1WWWWHERP, Q1P1P, M1TWERM","BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), 'TEN_MINUTE') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:20:00.000Z'</span>#BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), 'PT10M') = <span class=\"ddp-txt-sub-det\">'2018-02-03T10:20:00.000Z'</span>#BUCKETENDDATETIME(DATETIME('2018-02-03T10:12:10'), YEAR') = <span class=\"ddp-txt-sub-det\">'2019-01-01T00:00:00.000Z'</span>"
97,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,ADD_TIME,1,Y,0,"기준 시간에서 기간을 더하여 반환합니다.","ADD_TIME(base_time, period)","base_time: 기준이 되는 시간입니다.#period: 추가하고자하는 기간입니다. (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)","ADD_TIME('2011-01-04 00:00:00', '1M') = <span class=\"ddp-txt-sub-det\">'2011-02-04T00:00:00.000Z'</span>#ADD_TIME('2011-01-04 00:00:00', '1Y') = <span class=\"ddp-txt-sub-det\">'2012-01-04T00:00:00.000Z'</span>","Returns the duration in addition to the reference time.","Base_time: The time by which it is based.#period: Time to add (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)","ADD_TIME('2011-01-04 00:00:00', '1M') = <span class=\"ddp-txt-sub-det\">'2011-02-04T00:00:00.000Z'</span>#ADD_TIME('2011-01-04 00:00:00', '1Y') = <span class=\"ddp-txt-sub-det\">'2012-01-04T00:00:00.000Z'</span>"
98,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,SUB_TIME,1,Y,0,"기준 시간에서 기간을 빼고 반환합니다.","SUB_TIME(base_time, period)","base_time: 기준이 되는 시간입니다.#period: 빼고자하는 기간입니다. (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)","SUB_TIME('2011-01-04 00:00:00', '1M') = <span class=\"ddp-txt-sub-det\">'2010-12-04T00:00:00.000Z'</span>#SUB_TIME('2011-01-04 00:00:00', '1Y') = <span class=\"ddp-txt-sub-det\">'2010-01-04T00:00:00.000Z'</span>","Duration is subtracted from the reference time and returns it.","Base_time: The time by which it is based.#period: Time to exclude (Y-year, M-month, W-week, D-day, H-hour, m-minute, s-seconde)","SUB_TIME('2011-01-04 00:00:00', '1M') = <span class=\"ddp-txt-sub-det\">'2010-12-04T00:00:00.000Z'</span>#SUB_TIME('2011-01-04 00:00:00', '1Y') = <span class=\"ddp-txt-sub-det\"> '2010-01-04T00:00:00.000Z'</span>"
99,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DIFFTIME,1,Y,0,"두 시간의 차이를 지정된 시간 단위로 반환합니다.","DIFFTIME(time_unit, start_time, end_time)","time_unit: 결과의 시간 단위입니다. (MILLIS, EPOCH, SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, YEAR)#start_time: 시작 시간입니다.#end_time: 끝 시간입니다.","DIFFTIME('HOUR', '2011-01-04 00:00:00', '2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">10</span>#DIFFTIME('MINUTE', '2011-01-04 00:00:00', '2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">600</span>","Returns the difference between two hours in specified time units.","time_unit: The unit of time in the result. (MILLIS, EPOCH, SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, YEAR)#start_time: Start time.#end_time: End time.","DIFFTIME('HOUR', '2011-01-04 00:00:00', '2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">10</span>#DIFFTIME('MINUTE', '2011-01-04 00:00:00', '2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">600</span>"
100,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DAYNAME,1,Y,0,"입력된 시간을 시간대와 언어에 따라 요일을 반환합니다.","DAYNAME(datetime)#DAYNAME(datetime, timezone)#DAYNAME(datetime, timezone, locale)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.#locale: 출력 언어입니다.","DAYNAME('2011-01-04 00:00:00', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'화요일'</span>#DAYNAME('2011-01-04 00:00:00', 'America/Los_Angeles', 'en') = <span class=\"ddp-txt-sub-det\">'Tuesday'</span>#DAYNAME('2011-01-04 00:00:00', 'Asia/Beijing', 'zh') = <span class=\"ddp-txt-sub-det\">'星期二'</span>","Returns the day of the week based on the time zone and language entered.","datetime: The time to be targeted.#timezone: Time zone.#locale: The output language.","DAYNAME('2011-01-04 00:00:00', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'화요일'</span>#DAYNAME('2011-01-04 00:00:00', 'America/Los_Angeles', 'en') = <span class=\"ddp-txt-sub-det\">'Tuesday'</span>#DAYNAME('2011-01-04 00:00:00', 'Asia/Beijing', 'zh') = <span class=\"ddp-txt-sub-det\">'星期二'</span>"
101,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DAYOFMONTH,1,Y,0,"달을 기준으로 몇번째 일인지를 반환한다.","DAYOFMONTH(datetime)#DAYOFMONTH(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","DAYOFMONTH('2011-01-04 00:00:00') = <span class=\"ddp-txt-sub-det\">4</span>#DAYOFMONTH('2011-01-30 00:00:00') = <span class=\"ddp-txt-sub-det\">30</span>","Returns the number of days by month","datetime: The time to be targeted.#timezone: Time zone.","DAYOFMONTH('2011-01-04 00:00:00') = <span class=\"ddp-txt-sub-det\">4</span>#DAYOFMONTH('2011-01-30 00:00:00') = <span class=\"ddp-txt-sub-det\">30</span>"
102,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,LASTDAYOFMONTH,1,Y,0,"달을 기준으로 마지막 일자를 반환한다.","LASTDAYOFMONTH(datetime)#LASTDAYOFMONTH(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","LASTDAYOFMONTH('2011-01-04 00:00:00') = <span class=\"ddp-txt-sub-det\">31</span>#LASTDAYOFMONTH('2011-02-10 00:00:00') = <span class=\"ddp-txt-sub-det\">28</span>","Returns the last date based on the month","datetime: The time to be targeted.#timezone: Time zone.","LASTDAYOFMONTH('2011-01-04 00:00:00') = <span class=\"ddp-txt-sub-det\">31</span>#LASTDAYOFMONTH('2011-02-10 00:00:00') = <span class=\"ddp-txt-sub-det\">28</span>"
103,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DAYOFWEEK,1,Y,0,"주를 기준으로 몇번째 일인지를 반환한다.","DAYOFWEEK(datetime)#DAYOFWEEK(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","DAYOFWEEK('2011-01-10 00:00:00') = <span class=\"ddp-txt-sub-det\">1(월요일)</span>#DAYOFWEEK('2011-01-30 00:00:00') = <span class=\"ddp-txt-sub-det\">7(일요일)</span>","Returns the number of days by state","datetime: The time to be targeted.#timezone: Time zone.","DAYOFWEEK('2011-01-10 00:00:00') = <span class=\"ddp-txt-sub-det\">1(Monday)</span>#DAYOFWEEK('2011-01-30 00:00:00') = <span class=\"ddp-txt-sub-det\">7(Sunday)</span>"
104,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DAYOFYEAR,1,Y,0,"년을 기준으로 몇번째 일인지를 반환한다.","DAYOFYEAR(datetime)#DAYOFYEAR(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","DAYOFYEAR('2011-02-10 00:00:00') = <span class=\"ddp-txt-sub-det\">41</span>#DAYOFYEAR('2011-12-31 00:00:00') = <span class=\"ddp-txt-sub-det\">365</span>","Returns the number of days by year","datetime: The time to be targeted.#timezone: Time zone.","DAYOFYEAR('2011-02-10 00:00:00') = <span class=\"ddp-txt-sub-det\">41</span>#DAYOFYEAR('2011-12-31 00:00:00') = <span class=\"ddp-txt-sub-det\">365</span>"
105,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,WEEKOFWEEKYEAR,1,Y,0,"주 번호가 속하는 연도에서 몇번째 주인지를 반환합니다.","WEEKOFWEEKYEAR(datetime)#WEEKOFWEEKYEAR(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.</ul>","WEEKOFWEEKYEAR('2011-01-01 00:00:00') = <span class=\"ddp-txt-sub-det\">52</span>#WEEKOFWEEKYEAR('2011-01-07 00:00:00') = <span class=\"ddp-txt-sub-det\">1</span>","Returns the number of addresses in the year in which the main number belongs.","datetime: The time to be targeted.#timezone: Time zone.</ul>","WEEKOFWEEKYEAR('2011-01-01 00:00:00') = <span class=\"ddp-txt-sub-det\">52</span>#WEEKOFWEEKYEAR('2011-01-07 00:00:00') = <span class=\"ddp-txt-sub-det\">1</span>"
106,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,WEEKYEAR,1,Y,0,"주 번호가 속하는 연도를 반환합니다.","WEEKYEAR(datetime)#WEEKYEAR(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","WEEKYEAR('2011-01-01 00:00:00') = <span class=\"ddp-txt-sub-det\">2010</span>#WEEKYEAR('2011-12-31 00:00:00') = <span class=\"ddp-txt-sub-det\">2011</span>","Returns the year in which the main number belongs.","datetime: The time to be targeted.#timezone: Time zone.","WEEKYEAR('2011-01-01 00:00:00') = <span class=\"ddp-txt-sub-det\">2010</span>#WEEKYEAR('2011-12-31 00:00:00') = <span class=\"ddp-txt-sub-det\">2011</span>"
107,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,HOUR,1,Y,0,"대상 시간에서 시를 반환합니다.","HOUR(datetime)#HOUR(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","HOUR('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">10</span>#HOUR('2011-01-04 20:20:00') = <span class=\"ddp-txt-sub-det\">20</span>#HOUR('2011-01-04 23:00:00') = <span class=\"ddp-txt-sub-det\">23</span>","Returns a poem from the target time.","datetime: The time to be targeted.#timezone: Time zone.","HOUR('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">10</span>#HOUR('2011-01-04 20:20:00') = <span class=\"ddp-txt-sub-det\">20</span>#HOUR('2011-01-04 23:00:00') = <span class=\"ddp-txt-sub-det\">23</span>"
108,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,MONTH,1,Y,0,"대상 시간에서 월을 반환합니다.","MONTH(datetime)#MONTH(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","MONTH('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#MONTH('2011-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">5</span>#MONTH('2012-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">10</span>","Returns the month from the target time.","datetime: The time to be targeted.#timezone: Time zone.","MONTH('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#MONTH('2011-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">5</span>#MONTH('2012-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">10</span>"
109,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,MONTHNAME,1,Y,0,"입력된 시간을 시간대와 언어에 따라 월을 반환합니다.","MONTHNAME(datetime)#MONTHNAME(datetime, timezone)#MONTHNAME(datetime, timezone, locale)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.#locale: 출력 언어입니다.","MONTHNAME('2011-01-04 10:00:00', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'1월'</span>#MONTHNAME('2011-05-04 20:20:00', 'America/Los_Angeles', 'en') = <span class=\"ddp-txt-sub-det\">'May'</span>#MONTHNAME('2012-10-04 23:00:00', 'Asia/Beijing', 'zh') = <span class=\"ddp-txt-sub-det\">'十月'</span>","Returns the month based on the time zone and language entered.","datetime: The time to be targeted.#timezone: Time zone.#locale: The output language.","MONTHNAME('2011-01-04 10:00:00', 'Asia/Seoul', 'ko') = <span class=\"ddp-txt-sub-det\">'1월'</span>#MONTHNAME('2011-05-04 20:20:00', 'America/Los_Angeles', 'en') = <span class=\"ddp-txt-sub-det\">'May'</span>#MONTHNAME('2012-10-04 23:00:00', 'Asia/Beijing', 'zh') = <span class=\"ddp-txt-sub-det\">'十月'</span>"
110,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,YEAR,1,Y,0,"대상 시간에서 년을 반환합니다.","YEAR(datetime)#YEAR(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","YEAR('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">2011</span>#YEAR('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">2013</span>#YEAR('2015-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">2015</span>","Returns the year from the target time.","datetime: The time to be targeted.#timezone: Time zone.","YEAR('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">2011</span>#YEAR('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">2013</span>#YEAR('2015-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">2015</span>"
111,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,FIRST_DAY,1,Y,0,"대상 시간에서 월의 첫번째 일자를 반환합니다.","FIRST_DAY(datetime)#FIRST_DAY(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","FIRST_DAY('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-01T10:00:00.000Z'</span>#FIRST_DAY('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">'2013-05-01T20:20:00.000Z'</span>#FIRST_DAY('2015-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">'2015-10-01T23:00:00.000Z'</span>","Returns the first date of the month in the destination time.","datetime: The time to be targeted.#timezone: Time zone.","FIRST_DAY('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-01T10:00:00.000Z'</span>#FIRST_DAY('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">'2013-05-01T20:20:00.000Z'</span>#FIRST_DAY('2015-10-04 23:00:00') = <span class=\"ddp-txt-sub-det\">'2015-10-01T23:00:00.000Z'</span>"
112,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,LAST_DAY,1,Y,0,"대상 시간에서 월의 마지막 일자를 반환합니다.","LAST_DAY(datetime)#LAST_DAY(datetime, timezone)","datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","LAST_DAY('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-31T10:00:00.000Z'</span>#LAST_DAY('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">'2013-05-31T20:20:00.000Z'</span>#LAST_DAY('2015-02-04 23:00:00') = <span class=\"ddp-txt-sub-det\">'2015-02-28T23:00:00.000Z'</span>","Returns the last date of the month in the destination time.","datetime: The time to be targeted.#timezone: Time zone.","LAST_DAY('2011-01-04 10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-31T10:00:00.000Z'</span>#LAST_DAY('2013-05-04 20:20:00') = <span class=\"ddp-txt-sub-det\">'2013-05-31T20:20:00.000Z'</span>#LAST_DAY('2015-02-04 23:00:00') = <span class=\"ddp-txt-sub-det\">'2015-02-28T23:00:00.000Z'</span>"
113,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DATETIME,1,Y,0,"날짜-시간 문자열을 시간으로 변환하여 반환합니다.","DATETIME(datetime_string)#DATETIME(datetime_string, format)#DATETIME(datetime_string, format, timezone)","datetime_string: 변환할 대상이 되는 날짜-시간을 표시하는 문자열입니다.#format: 입력된 문자열을 변환할 구조를 의미합니다. 입력이 없을 경우 'yyyy-MM-dd'T'HH:mm:ss[.SSS][ZZ]'가 적용됩니다.#timezone: 시간대입니다.","DATETIME('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000Z'</span>#DATETIME('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000Z'</span>#DATETIME('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000+09:00'</span>","Returns a date-time string by converting it to time.","datetime_string: A string that represents the date-time to be converted.#format: means the structure to convert the entered string. If no input is available, 'yyyy-MM-dd'T'HH:mm:ss[.SSS' applies.#timezone: Time zone.","DATETIME('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000Z'</span>#DATETIME('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000Z'</span>#DATETIME('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">'2011-01-04T10:00:00.000+09:00'</span>"
114,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DATETIME_MILLIS,1,Y,0,"날짜-시간 문자열을 millisecond로 변환하여 반환합니다.","DATETIME_MILLIS(datetime_string)#DATETIME_MILLIS(datetime_string, format)#DATETIME_MILLIS(datetime_string, format, timezone)","datetime_string: 변환할 대상이 되는 날짜-시간을 표시하는 문자열입니다.#format: 입력된 문자열을 변환할 구조를 의미합니다. 입력이 없을 경우 'yyyy-MM-dd'T'HH:mm:ss[.SSS][ZZ]'가 적용됩니다.#timezone: 시간대입니다.","DATETIME_MILLIS('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#DATETIME_MILLIS('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#DATETIME_MILLIS('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">1294102800000</span>","Converts the date-time string to milliscond and returns it.","datetime_string: A string that represents the date-time to be converted.#format: means the structure to convert the entered string. If no input is available, 'yyyy-MM-dd'T'HH:mm:ss[.SSS' applies.#timezone: Time zone.","DATETIME_MILLIS('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#DATETIME_MILLIS('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss') = <span class=\"ddp-txt-sub-det\">1294135200000</span>#DATETIME_MILLIS('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">1294102800000</span>"
115,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,TIMESTAMP_VALIDATE,1,Y,0,"문자열 시간을 변환 가능 여부를 boolean으로 반환합니다.","TIMESTAMP_VALIDATE(datetime_string)#TIMESTAMP_VALIDATE(datetime_string,format)#TIMESTAMP_VALIDATE(datetime_string,format,timezone)#TIMESTAMP_VALIDATE(datetime_string,format,timezone, locale)","datetime_string: 변환할 대상이 되는 날짜-시간을 표시하는 문자열입니다.#format: 입력된 문자열을 변환할 구조를 의미합니다. 입력이 없을 경우 'yyyy-MM-dd'T'HH:mm:ss[.SSS][ZZ]'가 적용됩니다.#timezone: 시간대입니다.#locale: 출력 언어입니다.","TIMESTAMP_VALIDATE('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#TIMESTAMP_VALIDATE('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm') = <span class=\"ddp-txt-sub-det\">0</span>#TIMESTAMP_VALIDATE('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">1</span>","Returns whether the string time is convertable to boolean.","datetime_string: A string that represents the date-time to be converted.#format: means the structure to convert the entered string. If no input is available, 'yyyy-MM-dd'T'HH:mm:ss[.SSS' applies.#timezone: Time zone.#locale: The output language.","TIMESTAMP_VALIDATE('2011-01-04T10:00:00') = <span class=\"ddp-txt-sub-det\">1</span>#TIMESTAMP_VALIDATE('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm') = <span class=\"ddp-txt-sub-det\">0</span>#TIMESTAMP_VALIDATE('2011-01-04 10:00:00', 'yyyy-MM-dd HH:mm:ss', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">1</span>"
116,PAGE-CALCULATION,TIME,TIME FIELD,TIME FUNCTION,DATETIME_EXTRACT,1,Y,0,"대상 시간에서 time_unit 을 반환합니다.","DATETIME_EXTRACT(time_unit, datetime)#DATETIME_EXTRACT(time_unit, datetime, timezone)","time_unit: 결과의 시간 단위입니다. ( EPOCH, SECOND, MINUTE, HOUR, DAY, WEEK, WEEKOFWEEKYEAR, MONTH, YEAR, WEEKYEAR, DOW, DOY, QUARTER)#datetime: 대상이 되는 시간입니다.#timezone: 시간대입니다.","DATETIME_EXTRACT('SECOND', '2016-01-01 10:10:10') = <span class=\"ddp-txt-sub-det\">10</span>#DATETIME_EXTRACT('DOW', '2016-01-01 10:10:10') = <span class=\"ddp-txt-sub-det\">5</span>#DATETIME_EXTRACT('DOY', '2016-02-10 10:10:10', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">41</span>","Returns time_unit at target time.","time_unit: The unit of time in the result. (EPOCH, SECOND, MINUTE, HOUR, DAY, WEEK, WEEKOWEKYEAR, MONTH, YEAR, WEEKYAR, DOW, DOY, QUARTER)#datetime.#timezone: Time zone.","DATETIME_EXTRACT('SECOND', '2016-01-01 10:10:10') = <span class=\"ddp-txt-sub-det\">10</span>#DATETIME_EXTRACT('DOW', '2016-01-01 10:10:10') = <span class=\"ddp-txt-sub-det\">5</span>#DATETIME_EXTRACT('DOY', '2016-02-10 10:10:10', 'Asia/Seoul') = <span class=\"ddp-txt-sub-det\">41</span>"
117,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$PREV,1,Y,0,"윈도우 프레임에서 이전의 값을 반환합니다. 시작의 경우 null을 반환합니다.","$PREV(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$PREV(sumof([Profit]), {[Category]})","Returns the previous value in the window frame. Returns null for start","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$PREV(sumof([Profit]), {[Category]})"
118,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$NEXT,1,Y,0,"윈도우 프레임에서 이후의 값을 반환합니다. 마지막의 경우 null을 반환합니다.","$NEXT(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$NEXT(sumof([Profit]), {[Category]})","Returns a subsequent value in the window frame. Returns null for last.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$NEXT(sumof([Profit]), {[Category]})"
119,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$LAST,1,Y,0,"윈도우 프레임에서 마지막 값을 반환합니다.","$LAST(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$LAST(sumof([Profit]), {[Category]})","Returns the last value in the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$LAST(sumof([Profit]), {[Category]})"
120,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$FIRST,1,Y,0,"윈도우 프레임에서 처음 값을 반환합니다.","$FIRST(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$FIRST(sumof([Profit]), {[Category]})","Returns the first value in a window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$FIRST(sumof([Profit]), {[Category]})"
121,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$NTH,1,Y,0,"윈도우 프레임에서 n번째 값을 반환합니다.","$NTH(aggregation_expression, index, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#index: n번째를 의미하는 숫자입니다.(1부터 시작)#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$NTH(sumof([Profit]), 3, {[Category]})#$NTH(sumof([Profit]), 1, {[Category]}) == $FIRST(sumof([Profit]), {[Category]})","Returns the nth value in the window frame.","aggregation_expression: Formula with aggregation function.#index: A number that means nth (starts with 1)#partition_field_name: the name of the field to which you want to perform the partition. Type in the form of a list.","$NTH(sumof([Profit]), 3, {[Category]})#$NTH(sumof([Profit]), 1, {[Category]}) == $FIRST(sumof([Profit]), {[Category]})"
122,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$LAG,1,Y,0,"윈도우 프레임에서 n번째 이전의 값을 반환합니다. 값이 없는 경우 null을 반환합니다.","$LAG(aggregation_expression, index, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#index: n번째를 의미하는 숫자입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$LAG(sumof([Profit]), 3, {[Category]})","Returns the value before the nth time in the window frame. Returns null if no value exists.","aggregation_expression: Formula with aggregation function.#index: A number that means nth.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$LAG(sumof([Profit]), 3, {[Category]})"
123,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$LEAD,1,Y,0,"윈도우 프레임에서 n번째 이후의 값을 반환합니다. 값이 없는 경우 null을 반환합니다.","$LEAD(aggregation_expression, index, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#index: n번째를 의미하는 숫자입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$LEAD(sumof([Profit]), 3, {[Category]})","Returns the value after the nth time in the window frame. Returns null if no value exists.","aggregation_expression: Formula with aggregation function.#index: A number that means nth.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$LEAD(sumof([Profit]), 3, {[Category]})"
124,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$DELTA,1,Y,0,"윈도우 프레임에서 현재 값에서 이전의 값을 뺀 차이를 반환합니다. 이전의 값이 없는 경우 0을 반환합니다.","$DELTA(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$DELTA(sumof([Profit]), {[Category]})","Returns the difference between the current value and the previous value minus the previous value in the window frame. Returns zero if no previous value exists.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$DELTA(sumof([Profit]), {[Category]})"
125,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$SUM,1,Y,0,"윈도우 프레임에서 발생한 값들의 합을 반환합니다.","$SUM(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$SUM(sumof([Profit]), {[Category]})","Returns the sum of the values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$SUM(sumof([Profit]), {[Category]})"
126,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$MIN,1,Y,0,"윈도우 프레임에서 발생한 값들 중 최소값을 반환합니다.","$MIN(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$MIN(sumof([Profit]), {[Category]})","Returns the minimum value of the values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$MIN(sumof([Profit]), {[Category]})"
127,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$MAX,1,Y,0,"윈도우 프레임에서 발생한 값들 중 최대값을 반환합니다.","$MAX(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$MAX(sumof([Profit]), {[Category]})","Returns the maximum value that occurred in the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$MAX(sumof([Profit]), {[Category]})"
128,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$ROW_NUM,1,Y,0,"윈도우 프레임에서 누적된 데이타의 수를 반환합니다.","$ROW_NUM(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$ROW_NUM(sumof([Profit]), {[Category]}) => $DENSE_RANK(SUMOF([Sales]), {[Category]})","Returns the number of data accumulated in the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$ROW_NUM(sumof([Profit]), {[Category]}) => $DENSE_RANK(SUMOF([Sales]), {[Category]})"
129,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$RANK,1,Y,0,"윈도우 프레임에서 발생한 순위를 반환합니다.","$RANK(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$RANK(sumof([Profit]), {[Category]})","Returns the rank that occurred in the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$RANK(sumof([Profit]), {[Category]})"
130,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$DENSE_RANK,1,Y,0,"윈도우 프레임에서 발생한 중복을 무시한 순위를 반환합니다.","$DENSE_RANK(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$DENSE_RANK(sumof([Profit]), {[Category]})","Returns the rank that ignored duplicates in the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$DENSE_RANK(sumof([Profit]), {[Category]})"
131,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$MEAN,1,Y,0,"윈도우 프레임에서 발생한 값들의 평균값을 반환합니다.","$MEAN(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$MEAN(sumof([Profit]), {[Category]})","Returns the average value of the values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$MEAN(sumof([Profit]), {[Category]})"
132,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$VARIANCE,1,Y,0,"윈도우 프레임에서 발생한 값들의 분산을 반환합니다.","$VARIANCE(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$VARIANCE(sumof([Profit]), {[Category]})","Returns the variance of values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$VARIANCE(sumof([Profit]), {[Category]})"
133,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$STDDEV,1,Y,0,"윈도우 프레임에서 발생한 값들의 표준편차를 반환합니다.","$STDDEV(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$STDDEV(sumof([Profit]), {[Category]})","Returns the standard deviation of values generated by a window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$STDDEV(sumof([Profit]), {[Category]})"
134,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$VARIANCEPOP,1,Y,0,"윈도우 프레임에서 발생한 값들의 모분산을 반환합니다.","$VARIANCEPOP(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$VARIANCEPOP(sumof([Profit]), {[Category]})","Returns the distribution of the values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$VARIANCEPOP(sumof([Profit]), {[Category]})"
135,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$STDDEVPOP,1,Y,0,"윈도우 프레임에서 발생한 값들의 모표준편차를 반환합니다.","$STDDEVPOP(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$STDDEVPOP(sumof([Profit]), {[Category]})","Returns the parent standard deviation of values generated by the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$STDDEVPOP(sumof([Profit]), {[Category]})"
136,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$PERCENTILE,1,Y,0,"윈도우 프레임에서 발생한 값들에서 k번째 백분위수를 반환합니다.","$PERCENTILE(aggregation_expression, k, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#k: 0에서 1까지의 백분위수 값입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$PERCENTILE(sumof([Profit]), 0.5, {[Category]})","Returns the kth percentile from values generated by the window frame.","aggregation_expression: Formula with aggregation function.#k: The percentile value from 0 to 1.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$PERCENTILE(sumof([Profit]), 0.5, {[Category]})"
138,PAGE-CALCULATION,WINDOW,WINDOW FIELD,WINDOW FUNCTION,$SIZE,1,Y,0,"윈도우 프레임의 크기를 반환합니다.","$SIZE(aggregation_expression, {partition_field_name})","aggregation_expression: aggregation function을 포함한 수식입니다.#partition_field_name: partition을 수행할 대상 필드 이름입니다. 리스트의 형태로 입력합니다.","$SIZE(sumof([Profit]), {[Category]})","Returns the size of the window frame.","aggregation_expression: Formula with aggregation function.#partition_field_name: The name of the field to which you want to perform the partition. Type in the form of a list.","$SIZE(sumof([Profit]), {[Category]})"
141,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,MINOF,1,Y,0,"입력된 값들중에서 가장 작은 값을 반환한다.","MINOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","MINOF(Profit+10)","Returns the smallest value entered.","extension: The number or formula that represents the value.","MINOF(Profit+10)"
142,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,MAXOF,1,Y,0,"입력된 값들중에서 가장 큰 값을 반환합니다.","MAXOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","MAXOF(Profit+10)","Returns the largest value of the entered values","extension: The number or formula that represents the value.","MAXOF(Profit+10)"
143,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,AVGOF,1,Y,0,"입력된 값들의 평균 값을 반환합니다.","AVGOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","AVGOF(Profit+10)","Returns the average value of the entered values.","extension: The number or formula that represents the value.","AVGOF(Profit+10)"
144,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,SUMOF,1,Y,0,"입력된 값들의 합을 반환합니다.","SUMOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","SUMOF(Profit+10)","Returns the sum of the values entered.","extension: The number or formula that represents the value.","SUMOF(Profit+10)"
145,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,VARIANCEOF,1,Y,0,"입력된 값들의 분산을 반환합니다.","VARIANCEOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","VARIANCEOF(Profit+10)","Returns the variance of the entered values.","extension: The number or formula that represents the value.","VARIANCEOF(Profit+10)"
146,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,STDDEVOF,1,Y,0,"입력된 값들의 표준편차를 반환합니다.","STDDEV(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","STDDEVOF(Profit+10)","Returns the standard deviation of the entered values.","extension: The number or formula that represents the value.","STDDEVOF(Profit+10)"
147,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,COUNTOF,1,Y,0,"대상의 줄(row)의 개수를 구합니다.","COUNTOF(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","COUNTOF(Profit+10)","Gets the number of lines for the target.","extension: The number or formula that represents the value.","COUNTOF(Profit+10)"
148,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,COUNTD,1,Y,0,"중복된 값을 제거하여 고유한 값들의 수를 반환합니다.","COUNTD(expression)","expression: 값을 표현하는 수 혹은 수식입니다.","COUNTD([Sub-Category])","Returns the number of unique values by removing duplicate values.","extension: The number or formula that represents the value.","COUNTD([Sub-Category])"
149,PAGE-CALCULATION,AGGREGATION,AGGREGATION FIELD,AGGREGATION FUNCTION,IFCOUNTD,1,Y,0,"조건에 부합하는 고유한 값들의 수를 반환합니다.","IFCOUNTD(logical_expression, expression)","logical_expression: 참 혹은 거짓을 의미하는 값 혹은 표현식입니다.#expression: 값을 표현하는 수 혹은 수식입니다.","IFCOUNTD([Sales] > 1000,[Sub-Category])","Returns the number of unique values that meet the criteria.","logical_expression: A value or expression that means true or false.#expression: The number or formula that represents the value.","IFCOUNTD([Sales] > 1000,[Sub-Category])"
150,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,+,1,Y,0,"더하기를 수행합니다.","x+y","","profit + 10","Perform the addition.","","profit + 10"
151,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,-,1,Y,0,"빼기를 수행합니다.","x-y","","profit - 10","Perform the subtraction.","","profit - 10"
152,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,*,1,Y,0,"곱하기를 수행합니다.","x*y","","profit * 2","Perform multiplication.","","profit * 2"
153,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,/,1,Y,0,"나누기를 수행합니다.","x/y","","profit / 2","Perform the segmentation.","","profit / 2"
154,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,%,1,Y,0,"나머지를 반환합니다.","x%y","","profit % 2","Returns the rest.","","profit % 2"
155,PAGE-CALCULATION,MATH,MATH FIELD,MATH FUNCTION,^,1,Y,0,"지수 연산을 수행합니다.","x^y","","profit ^ 2","Perform an exponential operation.","","profit ^ 2"
156,PAGE-CALCULATION,ETC,ETC FIELD,ETC FUNCTION,IPV4_IN,1,Y,0,"IP가 범위에 포함되는지를 확인한다.","ipv4_in(target_ip, range_ip)#ipv4_in(target_ip, start_ip, end_ip)","target_ip : 찾고자 하는 IP로 string입니다.#range_ip : IP 범위를 표현하는 string입니다.#start_ip : IP의 시작을 표현하는 string입니다.#end_ip : IP의 끝을 표현하는 string입니다.","ipv4_in('192.168.3.4', '192.168.0.0') = <span class=\"ddp-txt-sub-det\">TRUE</span>#ipv4_in('192.168.3.4', '192.168.0.0', '192.168.128.128') = <span class=\"ddp-txt-sub-det\">TRUE</span>#ipv4_in('192.168.3.4', '192.168.32.0', '192.168.128.128') = <span class=\"ddp-txt-sub-det\">FALSE</span>","Check if IP is within range.","target_ip : string with the IP you want to find.#range_ip : String representing IP range.#start_ip : String that represents the beginning of IP.#end_ip : String representing the end of IP.","ipv4_in('192.168.3.4', '192.168.0.0') = <span class=\"ddp-txt-sub-det\">TRUE</span>#ipv4_in('192.168.3.4', '192.168.0.0', '192.168.128.128') = <span class=\"ddp-txt-sub-det\">TRUE</span>#ipv4_in('192.168.3.4', '192.168.32.0', '192.168.128.128') = <span class=\"ddp-txt-sub-det\">FALSE</span>"